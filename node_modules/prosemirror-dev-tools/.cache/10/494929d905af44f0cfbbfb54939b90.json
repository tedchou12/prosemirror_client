{"id":"../node_modules/pure-color/parse/rgb.js","dependencies":[{"name":"/Users/ssysoev/Development/prosemirror-dev-tools/package.json","includedInParent":true,"mtime":1593770443426},{"name":"/Users/ssysoev/Development/prosemirror-dev-tools/.babelrc","includedInParent":true,"mtime":1593067745726},{"name":"/Users/ssysoev/Development/prosemirror-dev-tools/node_modules/pure-color/package.json","includedInParent":true,"mtime":1589099246191},{"name":"./extractComponents","loc":{"line":1,"column":32},"parent":"/Users/ssysoev/Development/prosemirror-dev-tools/node_modules/pure-color/parse/rgb.js","resolved":"/Users/ssysoev/Development/prosemirror-dev-tools/node_modules/pure-color/parse/extractComponents.js"},{"name":"../util/clamp","loc":{"line":2,"column":20},"parent":"/Users/ssysoev/Development/prosemirror-dev-tools/node_modules/pure-color/parse/rgb.js","resolved":"/Users/ssysoev/Development/prosemirror-dev-tools/node_modules/pure-color/util/clamp.js"}],"generated":{"js":"var extractComponents = require(\"./extractComponents\");\nvar clamp = require(\"../util/clamp\");\n\nfunction parseRgbComponent(component, i) {\n  if (i < 3) {\n    if (component.indexOf('%') != -1) {\n      return Math.round(255 * clamp(parseInt(component, 10), 0, 100)/100);\n    } else {\n      return clamp(parseInt(component, 10), 0, 255);\n    }\n  } else {\n    return clamp(parseFloat(component), 0, 1);\n  } \n}\n\nfunction rgb(color) {\n  return extractComponents(color).map(parseRgbComponent);\n}\n\nmodule.exports = rgb;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/pure-color/parse/rgb.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/pure-color/parse/rgb.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/pure-color/parse/rgb.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/pure-color/parse/rgb.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/pure-color/parse/rgb.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/pure-color/parse/rgb.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/pure-color/parse/rgb.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/pure-color/parse/rgb.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/pure-color/parse/rgb.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/pure-color/parse/rgb.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/pure-color/parse/rgb.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/pure-color/parse/rgb.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/pure-color/parse/rgb.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/pure-color/parse/rgb.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/pure-color/parse/rgb.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/pure-color/parse/rgb.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/pure-color/parse/rgb.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/pure-color/parse/rgb.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/pure-color/parse/rgb.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/pure-color/parse/rgb.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}}],"sources":{"../node_modules/pure-color/parse/rgb.js":"var extractComponents = require(\"./extractComponents\");\nvar clamp = require(\"../util/clamp\");\n\nfunction parseRgbComponent(component, i) {\n  if (i < 3) {\n    if (component.indexOf('%') != -1) {\n      return Math.round(255 * clamp(parseInt(component, 10), 0, 100)/100);\n    } else {\n      return clamp(parseInt(component, 10), 0, 255);\n    }\n  } else {\n    return clamp(parseFloat(component), 0, 1);\n  } \n}\n\nfunction rgb(color) {\n  return extractComponents(color).map(parseRgbComponent);\n}\n\nmodule.exports = rgb;"},"lineCount":20}},"error":null,"hash":"b6213b768513dc6ebdb7cb40549e4781","cacheData":{"env":{}}}