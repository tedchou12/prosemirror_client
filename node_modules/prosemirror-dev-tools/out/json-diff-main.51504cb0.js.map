{"version":3,"sources":["../node_modules/jsondiffpatch/dist/jsondiffpatch.umd.js","../src/state/json-diff-main.js","../node_modules/parcel/src/builtins/hmr-runtime.js"],"names":["global","factory","exports","module","require","define","amd","jsondiffpatch","chalk","hasOwnProperty","_typeof","Symbol","iterator","obj","constructor","prototype","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","value","getter","call","inherits","subClass","superClass","create","setPrototypeOf","__proto__","possibleConstructorReturn","self","ReferenceError","slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_i","_s","next","done","push","err","Array","isArray","toConsumableArray","arr2","from","Processor","options","selfOptions","pipes","_options","pipe","name","pipeArg","processor","process","input","context","nextPipe","lastPipe","lastContext","nextAfterChildren","hasResult","result","Pipe","filters","Error","debug","index","filter","log","filterName","exiting","resultCheck","msg","console","append","_filters","apply","arguments","prepend","_filters2","unshift","indexOf","list","map","f","after","params","slice","splice","before","replace","remove","clear","shouldHaveResult","should","error","noResult","Context","setResult","exit","switchTo","child","childName","root","children","a","cloneRegExp","re","regexMatch","exec","toString","RegExp","clone","arg","Date","getTime","cloned","DiffContext","_Context","left","right","_this","cloneDiffValues","clone$$1","PatchContext","delta","ReverseContext","isArray$1","diffFilter","trivialMatchesDiffFilter","leftType","rightType","leftIsArray","rightIsArray","patchFilter","trivialMatchesPatchFilter","nested","regexArgs","reverseFilter","trivialReferseFilter","collectChildrenDiffFilter","_t","objectsDiffFilter","propertyFilter","patchFilter$1","nestedPatchFilter","collectChildrenPatchFilter","reverseFilter$1","nestedReverseFilter","collectChildrenReverseFilter","defaultMatch","array1","array2","index1","index2","lengthMatrix","match","len1","len2","x","y","matrix","Math","max","backtrack","subsequence","sequence","indices1","indices2","sameLetter","valueAtMatrixAbove","valueAtMatrixLeft","get$1","innerContext","join","lcs","ARRAY_MOVE","isArray$2","arrayIndexOf","array","item","arraysHaveMatchByRef","val1","val2","matchItems","value1","value2","objectHash","matchByPosition","hash1","hash2","hashCache1","hashCache2","diffFilter$1","arraysDiffFilter","matchContext","commonHead","commonTail","trimmed1","trimmed2","seq","removedItems","detectMove","arrays","includeValueOnMove","removedItemsLength","indexOnArray2","isMove","removeItemIndex1","compare","numerically","b","numericallyBy","patchFilter$2","toRemove","toInsert","toModify","parseInt","sort","indexDiff","removedValue","toInsertLength","insertion","toModifyLength","modification","collectChildrenPatchFilter$1","reverseFilter$2","arraysReverseFilter","newName","substr","reverseArrayDeltaIndex","itemDelta","reverseIndex","deltaIndex","deltaItem","moveFromIndex","moveToIndex","deleteIndex","collectChildrenReverseFilter$1","diffFilter$2","datesDiffFilter","createCommonjsModule","fn","diffMatchPatch","diff_match_patch","Diff_Timeout","Diff_EditCost","Match_Threshold","Match_Distance","Patch_DeleteThreshold","Patch_Margin","Match_MaxBits","DIFF_DELETE","DIFF_INSERT","DIFF_EQUAL","diff_main","text1","text2","opt_checklines","opt_deadline","Number","MAX_VALUE","deadline","checklines","commonlength","diff_commonPrefix","commonprefix","substring","diff_commonSuffix","commonsuffix","diffs","diff_compute_","diff_cleanupMerge","longtext","shorttext","hm","diff_halfMatch_","text1_a","text1_b","text2_a","text2_b","mid_common","diffs_a","diffs_b","concat","diff_lineMode_","diff_bisect_","diff_linesToChars_","chars1","chars2","linearray","lineArray","diff_charsToLines_","diff_cleanupSemantic","pointer","count_delete","count_insert","text_delete","text_insert","j","pop","text1_length","text2_length","max_d","ceil","v_offset","v_length","v1","v2","front","k1start","k1end","k2start","k2end","d","k1","k1_offset","x1","y1","charAt","k2_offset","x2","diff_bisectSplit_","k2","y2","text1a","text2a","text1b","text2b","diffsb","lineHash","diff_linesToCharsMunge_","text","chars","lineStart","lineEnd","lineArrayLength","line","String","fromCharCode","charCodeAt","pointermin","pointermax","min","pointermid","pointerstart","floor","pointerend","diff_commonOverlap_","text_length","best","pattern","found","dmp","diff_halfMatchI_","seed","best_common","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","prefixLength","suffixLength","hm1","hm2","changes","equalities","equalitiesLength","lastequality","length_insertions1","length_deletions1","length_insertions2","length_deletions2","diff_cleanupSemanticLossless","deletion","overlap_length1","overlap_length2","diff_cleanupSemanticScore_","one","two","char1","char2","nonAlphaNumeric1","nonAlphaNumericRegex_","nonAlphaNumeric2","whitespace1","whitespaceRegex_","whitespace2","lineBreak1","linebreakRegex_","lineBreak2","blankLine1","blanklineEndRegex_","blankLine2","blanklineStartRegex_","equality1","edit","equality2","commonOffset","commonString","bestEquality1","bestEdit","bestEquality2","bestScore","score","diff_cleanupEfficiency","pre_ins","pre_del","post_ins","post_del","diff_xIndex","loc","last_chars1","last_chars2","diff_prettyHtml","html","pattern_amp","pattern_lt","pattern_gt","pattern_para","op","data","diff_text1","diff_text2","diff_levenshtein","levenshtein","insertions","deletions","diff_toDelta","encodeURI","diff_fromDelta","diffsLength","tokens","split","param","decodeURI","ex","n","isNaN","match_main","match_bitap_","s","match_alphabet_","match_bitapScore_","e","accuracy","proximity","abs","score_threshold","best_loc","lastIndexOf","matchmask","bin_min","bin_mid","bin_max","last_rd","start","finish","rd","charMatch","patch_addContext_","patch","start2","length1","padding","prefix","suffix","start1","length2","patch_make","opt_b","opt_c","patches","patch_obj","patchDiffLength","char_count1","char_count2","prepatch_text","postpatch_text","diff_type","diff_text","patch_deepCopy","patchesCopy","patchCopy","patch_apply","nullPadding","patch_addPadding","patch_splitMax","results","expected_loc","start_loc","end_loc","mod","paddingLength","extraLength","patch_size","bigpatch","precontext","empty","shift","postcontext","patch_toText","patch_fromText","textline","textPointer","patchHeader","m","sign","coords1","coords2","TEXT_DIFF","DEFAULT_MIN_LENGTH","cachedDiffPatch","getDiffMatchPatch","required","diff_match_patch_not_found","diff","txt1","txt2","_patch","_error","textPatchFailed","diffFilter$3","textsDiffFilter","minLength","textDiff","diffMatchPatch$$1","patchFilter$3","textsPatchFilter","textDeltaReverse","l","lines","lineTmp","header","headerRegex","lineHeader","reverseFilter$3","textsReverseFilter","DiffPatcher","_processor","reverse","unpatch","isArray$3","getObjectKeys","keys","names","trimUnderscore","str","arrayKeyToSortNumber","arrayKeyComparer","key1","key2","BaseFormatter","format","prepareContext","recurse","finalize","buffer","out","_buffer","typeFormattterNotFound","deltaType","typeFormattterErrorFormatter","_ref","leftKey","movedFrom","isLast","useMoveOriginHere","leftValue","type","getDeltaType","nodeType","nodeBegin","rootBegin","typeFormattter","stack","nodeEnd","rootEnd","formatDeltaChildren","forEachDeltaKey","arrayKeys","moveDestinations","includeMoveDestinations","parseTextDiff","output","lineOutput","pieces","location","chr","pieceIndex","piecesLength","piece","pieceOutput","base","freeze","default","HtmlFormatter","_BaseFormatter","formatValue","htmlEscape","JSON","stringify","formatTextDiffString","nodeClass","hasArrows","adjustArrows","format_unchanged","format_movedestination","format_node","format_added","format_modified","format_deleted","format_moved","format_textdiff","replacements","jsondiffpatchHtmlFormatterAdjustArrows","nodeArg","node","document","getElementText","textContent","innerText","eachByQuery","el","query","elems","querySelectorAll","eachChildren","_ref2","_ref3","parentNode","style","arrowParent","svg","path","display","destination","querySelector","container","destinationElem","getAttribute","distance","offsetTop","setAttribute","top","curve","round","showUnchanged","show","delay","body","classes","showing","hiding","visible","hidden","classList","add","setTimeout","intervalId","setInterval","clearInterval","hideUnchanged","defaultInstance","AnnotatedFormatter","indent","levels","indentLevel","indentPad","row","json","htmlNote","wrapPropertyName","deltaAnnotations","added","formatLegend","modified","deleted","moved","textdiff","formatAnyChange","annotator","defaultInstance$1","format$1","annotated","OPERATIONS","move","JSONFormatter","pushCurrentOp","val","currentPath","pushMoveOp","to","toPath","last","sortBy","pred","compareByIndexDesc","indexA","indexB","lastA","lastB","opsByDescendingOrder","removeOps","splitA","splitB","partitionOps","fns","initArr","fill","position","reduce","acc","isMoveOp","isRemoveOp","_ref4","reorderOps","_partitionOps","_partitionOps2","moveOps","removedOps","restOps","removeOpsReverse","defaultInstance$2","format$2","jsonpatch","chalkColor","_len","args","_key","colors","movedestination","unchanged","textDiffLine","ConsoleFormatter","outLine","_len2","_key2","color","pushColor","popColor","defaultInstance$3","format$3","log$1","console$1","dateReviver","parts","UTC","defaultInstance$4","clone$1","formatters","JsonDiffMain","IdleScheduler","scheduler","request","id","diffPatcher","OVERLAY_ID","OldModule","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","event","parse","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","message","overlay","createErrorOverlay","appendChild","getElementById","createElement","stackTrace","innerHTML","getParents","modules","parents","k","dep","deps","cached","cache","some","cb"],"mappings":"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","file":"json-diff-main.51504cb0.js","sourceRoot":"../example","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('./empty')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', './empty'], factory) :\n\t(factory((global.jsondiffpatch = {}),global.chalk));\n}(this, (function (exports,chalk) { 'use strict';\n\nchalk = chalk && chalk.hasOwnProperty('default') ? chalk['default'] : chalk;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\nvar get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n\n\n\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nvar Processor = function () {\n  function Processor(options) {\n    classCallCheck(this, Processor);\n\n    this.selfOptions = options || {};\n    this.pipes = {};\n  }\n\n  createClass(Processor, [{\n    key: 'options',\n    value: function options(_options) {\n      if (_options) {\n        this.selfOptions = _options;\n      }\n      return this.selfOptions;\n    }\n  }, {\n    key: 'pipe',\n    value: function pipe(name, pipeArg) {\n      var pipe = pipeArg;\n      if (typeof name === 'string') {\n        if (typeof pipe === 'undefined') {\n          return this.pipes[name];\n        } else {\n          this.pipes[name] = pipe;\n        }\n      }\n      if (name && name.name) {\n        pipe = name;\n        if (pipe.processor === this) {\n          return pipe;\n        }\n        this.pipes[pipe.name] = pipe;\n      }\n      pipe.processor = this;\n      return pipe;\n    }\n  }, {\n    key: 'process',\n    value: function process(input, pipe) {\n      var context = input;\n      context.options = this.options();\n      var nextPipe = pipe || input.pipe || 'default';\n      var lastPipe = void 0;\n      var lastContext = void 0;\n      while (nextPipe) {\n        if (typeof context.nextAfterChildren !== 'undefined') {\n          // children processed and coming back to parent\n          context.next = context.nextAfterChildren;\n          context.nextAfterChildren = null;\n        }\n\n        if (typeof nextPipe === 'string') {\n          nextPipe = this.pipe(nextPipe);\n        }\n        nextPipe.process(context);\n        lastContext = context;\n        lastPipe = nextPipe;\n        nextPipe = null;\n        if (context) {\n          if (context.next) {\n            context = context.next;\n            nextPipe = lastContext.nextPipe || context.pipe || lastPipe;\n          }\n        }\n      }\n      return context.hasResult ? context.result : undefined;\n    }\n  }]);\n  return Processor;\n}();\n\nvar Pipe = function () {\n  function Pipe(name) {\n    classCallCheck(this, Pipe);\n\n    this.name = name;\n    this.filters = [];\n  }\n\n  createClass(Pipe, [{\n    key: 'process',\n    value: function process(input) {\n      if (!this.processor) {\n        throw new Error('add this pipe to a processor before using it');\n      }\n      var debug = this.debug;\n      var length = this.filters.length;\n      var context = input;\n      for (var index = 0; index < length; index++) {\n        var filter = this.filters[index];\n        if (debug) {\n          this.log('filter: ' + filter.filterName);\n        }\n        filter(context);\n        if ((typeof context === 'undefined' ? 'undefined' : _typeof(context)) === 'object' && context.exiting) {\n          context.exiting = false;\n          break;\n        }\n      }\n      if (!context.next && this.resultCheck) {\n        this.resultCheck(context);\n      }\n    }\n  }, {\n    key: 'log',\n    value: function log(msg) {\n      console.log('[jsondiffpatch] ' + this.name + ' pipe, ' + msg);\n    }\n  }, {\n    key: 'append',\n    value: function append() {\n      var _filters;\n\n      (_filters = this.filters).push.apply(_filters, arguments);\n      return this;\n    }\n  }, {\n    key: 'prepend',\n    value: function prepend() {\n      var _filters2;\n\n      (_filters2 = this.filters).unshift.apply(_filters2, arguments);\n      return this;\n    }\n  }, {\n    key: 'indexOf',\n    value: function indexOf(filterName) {\n      if (!filterName) {\n        throw new Error('a filter name is required');\n      }\n      for (var index = 0; index < this.filters.length; index++) {\n        var filter = this.filters[index];\n        if (filter.filterName === filterName) {\n          return index;\n        }\n      }\n      throw new Error('filter not found: ' + filterName);\n    }\n  }, {\n    key: 'list',\n    value: function list() {\n      return this.filters.map(function (f) {\n        return f.filterName;\n      });\n    }\n  }, {\n    key: 'after',\n    value: function after(filterName) {\n      var index = this.indexOf(filterName);\n      var params = Array.prototype.slice.call(arguments, 1);\n      if (!params.length) {\n        throw new Error('a filter is required');\n      }\n      params.unshift(index + 1, 0);\n      Array.prototype.splice.apply(this.filters, params);\n      return this;\n    }\n  }, {\n    key: 'before',\n    value: function before(filterName) {\n      var index = this.indexOf(filterName);\n      var params = Array.prototype.slice.call(arguments, 1);\n      if (!params.length) {\n        throw new Error('a filter is required');\n      }\n      params.unshift(index, 0);\n      Array.prototype.splice.apply(this.filters, params);\n      return this;\n    }\n  }, {\n    key: 'replace',\n    value: function replace(filterName) {\n      var index = this.indexOf(filterName);\n      var params = Array.prototype.slice.call(arguments, 1);\n      if (!params.length) {\n        throw new Error('a filter is required');\n      }\n      params.unshift(index, 1);\n      Array.prototype.splice.apply(this.filters, params);\n      return this;\n    }\n  }, {\n    key: 'remove',\n    value: function remove(filterName) {\n      var index = this.indexOf(filterName);\n      this.filters.splice(index, 1);\n      return this;\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.filters.length = 0;\n      return this;\n    }\n  }, {\n    key: 'shouldHaveResult',\n    value: function shouldHaveResult(should) {\n      if (should === false) {\n        this.resultCheck = null;\n        return;\n      }\n      if (this.resultCheck) {\n        return;\n      }\n      var pipe = this;\n      this.resultCheck = function (context) {\n        if (!context.hasResult) {\n          console.log(context);\n          var error = new Error(pipe.name + ' failed');\n          error.noResult = true;\n          throw error;\n        }\n      };\n      return this;\n    }\n  }]);\n  return Pipe;\n}();\n\nvar Context = function () {\n  function Context() {\n    classCallCheck(this, Context);\n  }\n\n  createClass(Context, [{\n    key: 'setResult',\n    value: function setResult(result) {\n      this.result = result;\n      this.hasResult = true;\n      return this;\n    }\n  }, {\n    key: 'exit',\n    value: function exit() {\n      this.exiting = true;\n      return this;\n    }\n  }, {\n    key: 'switchTo',\n    value: function switchTo(next, pipe) {\n      if (typeof next === 'string' || next instanceof Pipe) {\n        this.nextPipe = next;\n      } else {\n        this.next = next;\n        if (pipe) {\n          this.nextPipe = pipe;\n        }\n      }\n      return this;\n    }\n  }, {\n    key: 'push',\n    value: function push(child, name) {\n      child.parent = this;\n      if (typeof name !== 'undefined') {\n        child.childName = name;\n      }\n      child.root = this.root || this;\n      child.options = child.options || this.options;\n      if (!this.children) {\n        this.children = [child];\n        this.nextAfterChildren = this.next || null;\n        this.next = child;\n      } else {\n        this.children[this.children.length - 1].next = child;\n        this.children.push(child);\n      }\n      child.next = this;\n      return this;\n    }\n  }]);\n  return Context;\n}();\n\nvar isArray = typeof Array.isArray === 'function' ? Array.isArray : function (a) {\n  return a instanceof Array;\n};\n\nfunction cloneRegExp(re) {\n  var regexMatch = /^\\/(.*)\\/([gimyu]*)$/.exec(re.toString());\n  return new RegExp(regexMatch[1], regexMatch[2]);\n}\n\nfunction clone(arg) {\n  if ((typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) !== 'object') {\n    return arg;\n  }\n  if (arg === null) {\n    return null;\n  }\n  if (isArray(arg)) {\n    return arg.map(clone);\n  }\n  if (arg instanceof Date) {\n    return new Date(arg.getTime());\n  }\n  if (arg instanceof RegExp) {\n    return cloneRegExp(arg);\n  }\n  var cloned = {};\n  for (var name in arg) {\n    if (Object.prototype.hasOwnProperty.call(arg, name)) {\n      cloned[name] = clone(arg[name]);\n    }\n  }\n  return cloned;\n}\n\nvar DiffContext = function (_Context) {\n  inherits(DiffContext, _Context);\n\n  function DiffContext(left, right) {\n    classCallCheck(this, DiffContext);\n\n    var _this = possibleConstructorReturn(this, (DiffContext.__proto__ || Object.getPrototypeOf(DiffContext)).call(this));\n\n    _this.left = left;\n    _this.right = right;\n    _this.pipe = 'diff';\n    return _this;\n  }\n\n  createClass(DiffContext, [{\n    key: 'setResult',\n    value: function setResult(result) {\n      if (this.options.cloneDiffValues && (typeof result === 'undefined' ? 'undefined' : _typeof(result)) === 'object') {\n        var clone$$1 = typeof this.options.cloneDiffValues === 'function' ? this.options.cloneDiffValues : clone;\n        if (_typeof(result[0]) === 'object') {\n          result[0] = clone$$1(result[0]);\n        }\n        if (_typeof(result[1]) === 'object') {\n          result[1] = clone$$1(result[1]);\n        }\n      }\n      return Context.prototype.setResult.apply(this, arguments);\n    }\n  }]);\n  return DiffContext;\n}(Context);\n\nvar PatchContext = function (_Context) {\n  inherits(PatchContext, _Context);\n\n  function PatchContext(left, delta) {\n    classCallCheck(this, PatchContext);\n\n    var _this = possibleConstructorReturn(this, (PatchContext.__proto__ || Object.getPrototypeOf(PatchContext)).call(this));\n\n    _this.left = left;\n    _this.delta = delta;\n    _this.pipe = 'patch';\n    return _this;\n  }\n\n  return PatchContext;\n}(Context);\n\nvar ReverseContext = function (_Context) {\n  inherits(ReverseContext, _Context);\n\n  function ReverseContext(delta) {\n    classCallCheck(this, ReverseContext);\n\n    var _this = possibleConstructorReturn(this, (ReverseContext.__proto__ || Object.getPrototypeOf(ReverseContext)).call(this));\n\n    _this.delta = delta;\n    _this.pipe = 'reverse';\n    return _this;\n  }\n\n  return ReverseContext;\n}(Context);\n\nvar isArray$1 = typeof Array.isArray === 'function' ? Array.isArray : function (a) {\n  return a instanceof Array;\n};\n\nvar diffFilter = function trivialMatchesDiffFilter(context) {\n  if (context.left === context.right) {\n    context.setResult(undefined).exit();\n    return;\n  }\n  if (typeof context.left === 'undefined') {\n    if (typeof context.right === 'function') {\n      throw new Error('functions are not supported');\n    }\n    context.setResult([context.right]).exit();\n    return;\n  }\n  if (typeof context.right === 'undefined') {\n    context.setResult([context.left, 0, 0]).exit();\n    return;\n  }\n  if (typeof context.left === 'function' || typeof context.right === 'function') {\n    throw new Error('functions are not supported');\n  }\n  context.leftType = context.left === null ? 'null' : _typeof(context.left);\n  context.rightType = context.right === null ? 'null' : _typeof(context.right);\n  if (context.leftType !== context.rightType) {\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n  if (context.leftType === 'boolean' || context.leftType === 'number') {\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n  if (context.leftType === 'object') {\n    context.leftIsArray = isArray$1(context.left);\n  }\n  if (context.rightType === 'object') {\n    context.rightIsArray = isArray$1(context.right);\n  }\n  if (context.leftIsArray !== context.rightIsArray) {\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n\n  if (context.left instanceof RegExp) {\n    if (context.right instanceof RegExp) {\n      context.setResult([context.left.toString(), context.right.toString()]).exit();\n    } else {\n      context.setResult([context.left, context.right]).exit();\n    }\n  }\n};\ndiffFilter.filterName = 'trivial';\n\nvar patchFilter = function trivialMatchesPatchFilter(context) {\n  if (typeof context.delta === 'undefined') {\n    context.setResult(context.left).exit();\n    return;\n  }\n  context.nested = !isArray$1(context.delta);\n  if (context.nested) {\n    return;\n  }\n  if (context.delta.length === 1) {\n    context.setResult(context.delta[0]).exit();\n    return;\n  }\n  if (context.delta.length === 2) {\n    if (context.left instanceof RegExp) {\n      var regexArgs = /^\\/(.*)\\/([gimyu]+)$/.exec(context.delta[1]);\n      if (regexArgs) {\n        context.setResult(new RegExp(regexArgs[1], regexArgs[2])).exit();\n        return;\n      }\n    }\n    context.setResult(context.delta[1]).exit();\n    return;\n  }\n  if (context.delta.length === 3 && context.delta[2] === 0) {\n    context.setResult(undefined).exit();\n  }\n};\npatchFilter.filterName = 'trivial';\n\nvar reverseFilter = function trivialReferseFilter(context) {\n  if (typeof context.delta === 'undefined') {\n    context.setResult(context.delta).exit();\n    return;\n  }\n  context.nested = !isArray$1(context.delta);\n  if (context.nested) {\n    return;\n  }\n  if (context.delta.length === 1) {\n    context.setResult([context.delta[0], 0, 0]).exit();\n    return;\n  }\n  if (context.delta.length === 2) {\n    context.setResult([context.delta[1], context.delta[0]]).exit();\n    return;\n  }\n  if (context.delta.length === 3 && context.delta[2] === 0) {\n    context.setResult([context.delta[0]]).exit();\n  }\n};\nreverseFilter.filterName = 'trivial';\n\nfunction collectChildrenDiffFilter(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  var length = context.children.length;\n  var child = void 0;\n  var result = context.result;\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    if (typeof child.result === 'undefined') {\n      continue;\n    }\n    result = result || {};\n    result[child.childName] = child.result;\n  }\n  if (result && context.leftIsArray) {\n    result._t = 'a';\n  }\n  context.setResult(result).exit();\n}\ncollectChildrenDiffFilter.filterName = 'collectChildren';\n\nfunction objectsDiffFilter(context) {\n  if (context.leftIsArray || context.leftType !== 'object') {\n    return;\n  }\n\n  var name = void 0;\n  var child = void 0;\n  var propertyFilter = context.options.propertyFilter;\n  for (name in context.left) {\n    if (!Object.prototype.hasOwnProperty.call(context.left, name)) {\n      continue;\n    }\n    if (propertyFilter && !propertyFilter(name, context)) {\n      continue;\n    }\n    child = new DiffContext(context.left[name], context.right[name]);\n    context.push(child, name);\n  }\n  for (name in context.right) {\n    if (!Object.prototype.hasOwnProperty.call(context.right, name)) {\n      continue;\n    }\n    if (propertyFilter && !propertyFilter(name, context)) {\n      continue;\n    }\n    if (typeof context.left[name] === 'undefined') {\n      child = new DiffContext(undefined, context.right[name]);\n      context.push(child, name);\n    }\n  }\n\n  if (!context.children || context.children.length === 0) {\n    context.setResult(undefined).exit();\n    return;\n  }\n  context.exit();\n}\nobjectsDiffFilter.filterName = 'objects';\n\nvar patchFilter$1 = function nestedPatchFilter(context) {\n  if (!context.nested) {\n    return;\n  }\n  if (context.delta._t) {\n    return;\n  }\n  var name = void 0;\n  var child = void 0;\n  for (name in context.delta) {\n    child = new PatchContext(context.left[name], context.delta[name]);\n    context.push(child, name);\n  }\n  context.exit();\n};\npatchFilter$1.filterName = 'objects';\n\nvar collectChildrenPatchFilter = function collectChildrenPatchFilter(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  if (context.delta._t) {\n    return;\n  }\n  var length = context.children.length;\n  var child = void 0;\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    if (Object.prototype.hasOwnProperty.call(context.left, child.childName) && child.result === undefined) {\n      delete context.left[child.childName];\n    } else if (context.left[child.childName] !== child.result) {\n      context.left[child.childName] = child.result;\n    }\n  }\n  context.setResult(context.left).exit();\n};\ncollectChildrenPatchFilter.filterName = 'collectChildren';\n\nvar reverseFilter$1 = function nestedReverseFilter(context) {\n  if (!context.nested) {\n    return;\n  }\n  if (context.delta._t) {\n    return;\n  }\n  var name = void 0;\n  var child = void 0;\n  for (name in context.delta) {\n    child = new ReverseContext(context.delta[name]);\n    context.push(child, name);\n  }\n  context.exit();\n};\nreverseFilter$1.filterName = 'objects';\n\nfunction collectChildrenReverseFilter(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  if (context.delta._t) {\n    return;\n  }\n  var length = context.children.length;\n  var child = void 0;\n  var delta = {};\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    if (delta[child.childName] !== child.result) {\n      delta[child.childName] = child.result;\n    }\n  }\n  context.setResult(delta).exit();\n}\ncollectChildrenReverseFilter.filterName = 'collectChildren';\n\n/*\n\nLCS implementation that supports arrays or strings\n\nreference: http://en.wikipedia.org/wiki/Longest_common_subsequence_problem\n\n*/\n\nvar defaultMatch = function defaultMatch(array1, array2, index1, index2) {\n  return array1[index1] === array2[index2];\n};\n\nvar lengthMatrix = function lengthMatrix(array1, array2, match, context) {\n  var len1 = array1.length;\n  var len2 = array2.length;\n  var x = void 0,\n      y = void 0;\n\n  // initialize empty matrix of len1+1 x len2+1\n  var matrix = [len1 + 1];\n  for (x = 0; x < len1 + 1; x++) {\n    matrix[x] = [len2 + 1];\n    for (y = 0; y < len2 + 1; y++) {\n      matrix[x][y] = 0;\n    }\n  }\n  matrix.match = match;\n  // save sequence lengths for each coordinate\n  for (x = 1; x < len1 + 1; x++) {\n    for (y = 1; y < len2 + 1; y++) {\n      if (match(array1, array2, x - 1, y - 1, context)) {\n        matrix[x][y] = matrix[x - 1][y - 1] + 1;\n      } else {\n        matrix[x][y] = Math.max(matrix[x - 1][y], matrix[x][y - 1]);\n      }\n    }\n  }\n  return matrix;\n};\n\nvar backtrack = function backtrack(matrix, array1, array2, context) {\n  var index1 = array1.length;\n  var index2 = array2.length;\n  var subsequence = {\n    sequence: [],\n    indices1: [],\n    indices2: []\n  };\n\n  while (index1 !== 0 && index2 !== 0) {\n    var sameLetter = matrix.match(array1, array2, index1 - 1, index2 - 1, context);\n    if (sameLetter) {\n      subsequence.sequence.unshift(array1[index1 - 1]);\n      subsequence.indices1.unshift(index1 - 1);\n      subsequence.indices2.unshift(index2 - 1);\n      --index1;\n      --index2;\n    } else {\n      var valueAtMatrixAbove = matrix[index1][index2 - 1];\n      var valueAtMatrixLeft = matrix[index1 - 1][index2];\n      if (valueAtMatrixAbove > valueAtMatrixLeft) {\n        --index2;\n      } else {\n        --index1;\n      }\n    }\n  }\n  return subsequence;\n};\n\nvar get$1 = function get(array1, array2, match, context) {\n  var innerContext = context || {};\n  var matrix = lengthMatrix(array1, array2, match || defaultMatch, innerContext);\n  var result = backtrack(matrix, array1, array2, innerContext);\n  if (typeof array1 === 'string' && typeof array2 === 'string') {\n    result.sequence = result.sequence.join('');\n  }\n  return result;\n};\n\nvar lcs = {\n  get: get$1\n};\n\nvar ARRAY_MOVE = 3;\n\nvar isArray$2 = typeof Array.isArray === 'function' ? Array.isArray : function (a) {\n  return a instanceof Array;\n};\n\nvar arrayIndexOf = typeof Array.prototype.indexOf === 'function' ? function (array, item) {\n  return array.indexOf(item);\n} : function (array, item) {\n  var length = array.length;\n  for (var i = 0; i < length; i++) {\n    if (array[i] === item) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nfunction arraysHaveMatchByRef(array1, array2, len1, len2) {\n  for (var index1 = 0; index1 < len1; index1++) {\n    var val1 = array1[index1];\n    for (var index2 = 0; index2 < len2; index2++) {\n      var val2 = array2[index2];\n      if (index1 !== index2 && val1 === val2) {\n        return true;\n      }\n    }\n  }\n}\n\nfunction matchItems(array1, array2, index1, index2, context) {\n  var value1 = array1[index1];\n  var value2 = array2[index2];\n  if (value1 === value2) {\n    return true;\n  }\n  if ((typeof value1 === 'undefined' ? 'undefined' : _typeof(value1)) !== 'object' || (typeof value2 === 'undefined' ? 'undefined' : _typeof(value2)) !== 'object') {\n    return false;\n  }\n  var objectHash = context.objectHash;\n  if (!objectHash) {\n    // no way to match objects was provided, try match by position\n    return context.matchByPosition && index1 === index2;\n  }\n  var hash1 = void 0;\n  var hash2 = void 0;\n  if (typeof index1 === 'number') {\n    context.hashCache1 = context.hashCache1 || [];\n    hash1 = context.hashCache1[index1];\n    if (typeof hash1 === 'undefined') {\n      context.hashCache1[index1] = hash1 = objectHash(value1, index1);\n    }\n  } else {\n    hash1 = objectHash(value1);\n  }\n  if (typeof hash1 === 'undefined') {\n    return false;\n  }\n  if (typeof index2 === 'number') {\n    context.hashCache2 = context.hashCache2 || [];\n    hash2 = context.hashCache2[index2];\n    if (typeof hash2 === 'undefined') {\n      context.hashCache2[index2] = hash2 = objectHash(value2, index2);\n    }\n  } else {\n    hash2 = objectHash(value2);\n  }\n  if (typeof hash2 === 'undefined') {\n    return false;\n  }\n  return hash1 === hash2;\n}\n\nvar diffFilter$1 = function arraysDiffFilter(context) {\n  if (!context.leftIsArray) {\n    return;\n  }\n\n  var matchContext = {\n    objectHash: context.options && context.options.objectHash,\n    matchByPosition: context.options && context.options.matchByPosition\n  };\n  var commonHead = 0;\n  var commonTail = 0;\n  var index = void 0;\n  var index1 = void 0;\n  var index2 = void 0;\n  var array1 = context.left;\n  var array2 = context.right;\n  var len1 = array1.length;\n  var len2 = array2.length;\n\n  var child = void 0;\n\n  if (len1 > 0 && len2 > 0 && !matchContext.objectHash && typeof matchContext.matchByPosition !== 'boolean') {\n    matchContext.matchByPosition = !arraysHaveMatchByRef(array1, array2, len1, len2);\n  }\n\n  // separate common head\n  while (commonHead < len1 && commonHead < len2 && matchItems(array1, array2, commonHead, commonHead, matchContext)) {\n    index = commonHead;\n    child = new DiffContext(context.left[index], context.right[index]);\n    context.push(child, index);\n    commonHead++;\n  }\n  // separate common tail\n  while (commonTail + commonHead < len1 && commonTail + commonHead < len2 && matchItems(array1, array2, len1 - 1 - commonTail, len2 - 1 - commonTail, matchContext)) {\n    index1 = len1 - 1 - commonTail;\n    index2 = len2 - 1 - commonTail;\n    child = new DiffContext(context.left[index1], context.right[index2]);\n    context.push(child, index2);\n    commonTail++;\n  }\n  var result = void 0;\n  if (commonHead + commonTail === len1) {\n    if (len1 === len2) {\n      // arrays are identical\n      context.setResult(undefined).exit();\n      return;\n    }\n    // trivial case, a block (1 or more consecutive items) was added\n    result = result || {\n      _t: 'a'\n    };\n    for (index = commonHead; index < len2 - commonTail; index++) {\n      result[index] = [array2[index]];\n    }\n    context.setResult(result).exit();\n    return;\n  }\n  if (commonHead + commonTail === len2) {\n    // trivial case, a block (1 or more consecutive items) was removed\n    result = result || {\n      _t: 'a'\n    };\n    for (index = commonHead; index < len1 - commonTail; index++) {\n      result['_' + index] = [array1[index], 0, 0];\n    }\n    context.setResult(result).exit();\n    return;\n  }\n  // reset hash cache\n  delete matchContext.hashCache1;\n  delete matchContext.hashCache2;\n\n  // diff is not trivial, find the LCS (Longest Common Subsequence)\n  var trimmed1 = array1.slice(commonHead, len1 - commonTail);\n  var trimmed2 = array2.slice(commonHead, len2 - commonTail);\n  var seq = lcs.get(trimmed1, trimmed2, matchItems, matchContext);\n  var removedItems = [];\n  result = result || {\n    _t: 'a'\n  };\n  for (index = commonHead; index < len1 - commonTail; index++) {\n    if (arrayIndexOf(seq.indices1, index - commonHead) < 0) {\n      // removed\n      result['_' + index] = [array1[index], 0, 0];\n      removedItems.push(index);\n    }\n  }\n\n  var detectMove = true;\n  if (context.options && context.options.arrays && context.options.arrays.detectMove === false) {\n    detectMove = false;\n  }\n  var includeValueOnMove = false;\n  if (context.options && context.options.arrays && context.options.arrays.includeValueOnMove) {\n    includeValueOnMove = true;\n  }\n\n  var removedItemsLength = removedItems.length;\n  for (index = commonHead; index < len2 - commonTail; index++) {\n    var indexOnArray2 = arrayIndexOf(seq.indices2, index - commonHead);\n    if (indexOnArray2 < 0) {\n      // added, try to match with a removed item and register as position move\n      var isMove = false;\n      if (detectMove && removedItemsLength > 0) {\n        for (var removeItemIndex1 = 0; removeItemIndex1 < removedItemsLength; removeItemIndex1++) {\n          index1 = removedItems[removeItemIndex1];\n          if (matchItems(trimmed1, trimmed2, index1 - commonHead, index - commonHead, matchContext)) {\n            // store position move as: [originalValue, newPosition, ARRAY_MOVE]\n            result['_' + index1].splice(1, 2, index, ARRAY_MOVE);\n            if (!includeValueOnMove) {\n              // don't include moved value on diff, to save bytes\n              result['_' + index1][0] = '';\n            }\n\n            index2 = index;\n            child = new DiffContext(context.left[index1], context.right[index2]);\n            context.push(child, index2);\n            removedItems.splice(removeItemIndex1, 1);\n            isMove = true;\n            break;\n          }\n        }\n      }\n      if (!isMove) {\n        // added\n        result[index] = [array2[index]];\n      }\n    } else {\n      // match, do inner diff\n      index1 = seq.indices1[indexOnArray2] + commonHead;\n      index2 = seq.indices2[indexOnArray2] + commonHead;\n      child = new DiffContext(context.left[index1], context.right[index2]);\n      context.push(child, index2);\n    }\n  }\n\n  context.setResult(result).exit();\n};\ndiffFilter$1.filterName = 'arrays';\n\nvar compare = {\n  numerically: function numerically(a, b) {\n    return a - b;\n  },\n  numericallyBy: function numericallyBy(name) {\n    return function (a, b) {\n      return a[name] - b[name];\n    };\n  }\n};\n\nvar patchFilter$2 = function nestedPatchFilter(context) {\n  if (!context.nested) {\n    return;\n  }\n  if (context.delta._t !== 'a') {\n    return;\n  }\n  var index = void 0;\n  var index1 = void 0;\n\n  var delta = context.delta;\n  var array = context.left;\n\n  // first, separate removals, insertions and modifications\n  var toRemove = [];\n  var toInsert = [];\n  var toModify = [];\n  for (index in delta) {\n    if (index !== '_t') {\n      if (index[0] === '_') {\n        // removed item from original array\n        if (delta[index][2] === 0 || delta[index][2] === ARRAY_MOVE) {\n          toRemove.push(parseInt(index.slice(1), 10));\n        } else {\n          throw new Error('only removal or move can be applied at original array indices,' + (' invalid diff type: ' + delta[index][2]));\n        }\n      } else {\n        if (delta[index].length === 1) {\n          // added item at new array\n          toInsert.push({\n            index: parseInt(index, 10),\n            value: delta[index][0]\n          });\n        } else {\n          // modified item at new array\n          toModify.push({\n            index: parseInt(index, 10),\n            delta: delta[index]\n          });\n        }\n      }\n    }\n  }\n\n  // remove items, in reverse order to avoid sawing our own floor\n  toRemove = toRemove.sort(compare.numerically);\n  for (index = toRemove.length - 1; index >= 0; index--) {\n    index1 = toRemove[index];\n    var indexDiff = delta['_' + index1];\n    var removedValue = array.splice(index1, 1)[0];\n    if (indexDiff[2] === ARRAY_MOVE) {\n      // reinsert later\n      toInsert.push({\n        index: indexDiff[1],\n        value: removedValue\n      });\n    }\n  }\n\n  // insert items, in reverse order to avoid moving our own floor\n  toInsert = toInsert.sort(compare.numericallyBy('index'));\n  var toInsertLength = toInsert.length;\n  for (index = 0; index < toInsertLength; index++) {\n    var insertion = toInsert[index];\n    array.splice(insertion.index, 0, insertion.value);\n  }\n\n  // apply modifications\n  var toModifyLength = toModify.length;\n  var child = void 0;\n  if (toModifyLength > 0) {\n    for (index = 0; index < toModifyLength; index++) {\n      var modification = toModify[index];\n      child = new PatchContext(context.left[modification.index], modification.delta);\n      context.push(child, modification.index);\n    }\n  }\n\n  if (!context.children) {\n    context.setResult(context.left).exit();\n    return;\n  }\n  context.exit();\n};\npatchFilter$2.filterName = 'arrays';\n\nvar collectChildrenPatchFilter$1 = function collectChildrenPatchFilter(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  if (context.delta._t !== 'a') {\n    return;\n  }\n  var length = context.children.length;\n  var child = void 0;\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    context.left[child.childName] = child.result;\n  }\n  context.setResult(context.left).exit();\n};\ncollectChildrenPatchFilter$1.filterName = 'arraysCollectChildren';\n\nvar reverseFilter$2 = function arraysReverseFilter(context) {\n  if (!context.nested) {\n    if (context.delta[2] === ARRAY_MOVE) {\n      context.newName = '_' + context.delta[1];\n      context.setResult([context.delta[0], parseInt(context.childName.substr(1), 10), ARRAY_MOVE]).exit();\n    }\n    return;\n  }\n  if (context.delta._t !== 'a') {\n    return;\n  }\n  var name = void 0;\n  var child = void 0;\n  for (name in context.delta) {\n    if (name === '_t') {\n      continue;\n    }\n    child = new ReverseContext(context.delta[name]);\n    context.push(child, name);\n  }\n  context.exit();\n};\nreverseFilter$2.filterName = 'arrays';\n\nvar reverseArrayDeltaIndex = function reverseArrayDeltaIndex(delta, index, itemDelta) {\n  if (typeof index === 'string' && index[0] === '_') {\n    return parseInt(index.substr(1), 10);\n  } else if (isArray$2(itemDelta) && itemDelta[2] === 0) {\n    return '_' + index;\n  }\n\n  var reverseIndex = +index;\n  for (var deltaIndex in delta) {\n    var deltaItem = delta[deltaIndex];\n    if (isArray$2(deltaItem)) {\n      if (deltaItem[2] === ARRAY_MOVE) {\n        var moveFromIndex = parseInt(deltaIndex.substr(1), 10);\n        var moveToIndex = deltaItem[1];\n        if (moveToIndex === +index) {\n          return moveFromIndex;\n        }\n        if (moveFromIndex <= reverseIndex && moveToIndex > reverseIndex) {\n          reverseIndex++;\n        } else if (moveFromIndex >= reverseIndex && moveToIndex < reverseIndex) {\n          reverseIndex--;\n        }\n      } else if (deltaItem[2] === 0) {\n        var deleteIndex = parseInt(deltaIndex.substr(1), 10);\n        if (deleteIndex <= reverseIndex) {\n          reverseIndex++;\n        }\n      } else if (deltaItem.length === 1 && deltaIndex <= reverseIndex) {\n        reverseIndex--;\n      }\n    }\n  }\n\n  return reverseIndex;\n};\n\nfunction collectChildrenReverseFilter$1(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  if (context.delta._t !== 'a') {\n    return;\n  }\n  var length = context.children.length;\n  var child = void 0;\n  var delta = {\n    _t: 'a'\n  };\n\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    var name = child.newName;\n    if (typeof name === 'undefined') {\n      name = reverseArrayDeltaIndex(context.delta, child.childName, child.result);\n    }\n    if (delta[name] !== child.result) {\n      delta[name] = child.result;\n    }\n  }\n  context.setResult(delta).exit();\n}\ncollectChildrenReverseFilter$1.filterName = 'arraysCollectChildren';\n\nvar diffFilter$2 = function datesDiffFilter(context) {\n  if (context.left instanceof Date) {\n    if (context.right instanceof Date) {\n      if (context.left.getTime() !== context.right.getTime()) {\n        context.setResult([context.left, context.right]);\n      } else {\n        context.setResult(undefined);\n      }\n    } else {\n      context.setResult([context.left, context.right]);\n    }\n    context.exit();\n  } else if (context.right instanceof Date) {\n    context.setResult([context.left, context.right]).exit();\n  }\n};\ndiffFilter$2.filterName = 'dates';\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar diffMatchPatch = createCommonjsModule(function (module) {\n/**\n * Diff Match and Patch\n * Copyright 2018 The diff-match-patch Authors.\n * https://github.com/google/diff-match-patch\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Computes the difference between two texts to create a patch.\n * Applies the patch onto another text, allowing for errors.\n * @author fraser@google.com (Neil Fraser)\n */\n\n/**\n * Class containing the diff, match and patch methods.\n * @constructor\n */\nfunction diff_match_patch() {\n\n  // Defaults.\n  // Redefine these in your program to override the defaults.\n\n  // Number of seconds to map a diff before giving up (0 for infinity).\n  this.Diff_Timeout = 1.0;\n  // Cost of an empty edit operation in terms of edit characters.\n  this.Diff_EditCost = 4;\n  // At what point is no match declared (0.0 = perfection, 1.0 = very loose).\n  this.Match_Threshold = 0.5;\n  // How far to search for a match (0 = exact location, 1000+ = broad match).\n  // A match this many characters away from the expected location will add\n  // 1.0 to the score (0.0 is a perfect match).\n  this.Match_Distance = 1000;\n  // When deleting a large block of text (over ~64 characters), how close do\n  // the contents have to be to match the expected contents. (0.0 = perfection,\n  // 1.0 = very loose).  Note that Match_Threshold controls how closely the\n  // end points of a delete need to match.\n  this.Patch_DeleteThreshold = 0.5;\n  // Chunk size for context length.\n  this.Patch_Margin = 4;\n\n  // The number of bits in an int.\n  this.Match_MaxBits = 32;\n}\n\n\n//  DIFF FUNCTIONS\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n/** @typedef {{0: number, 1: string}} */\ndiff_match_patch.prototype.diff_main = function(text1, text2, opt_checklines,\n    opt_deadline) {\n  // Set a deadline by which time the diff must be complete.\n  if (typeof opt_deadline == 'undefined') {\n    if (this.Diff_Timeout <= 0) {\n      opt_deadline = Number.MAX_VALUE;\n    } else {\n      opt_deadline = (new Date).getTime() + this.Diff_Timeout * 1000;\n    }\n  }\n  var deadline = opt_deadline;\n\n  // Check for null inputs.\n  if (text1 == null || text2 == null) {\n    throw new Error('Null input. (diff_main)');\n  }\n\n  // Check for equality (speedup).\n  if (text1 == text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (typeof opt_checklines == 'undefined') {\n    opt_checklines = true;\n  }\n  var checklines = opt_checklines;\n\n  // Trim off common prefix (speedup).\n  var commonlength = this.diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = this.diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = this.diff_compute_(text1, text2, checklines, deadline);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  this.diff_cleanupMerge(diffs);\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean} checklines Speedup flag.  If false, then don't run a\n *     line-level diff first to identify the changed areas.\n *     If true, then run a faster, slightly less optimal diff.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_compute_ = function(text1, text2, checklines,\n    deadline) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i != -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [[DIFF_INSERT, longtext.substring(0, i)],\n             [DIFF_EQUAL, shorttext],\n             [DIFF_INSERT, longtext.substring(i + shorttext.length)]];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length == 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = this.diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = this.diff_main(text1_a, text2_a, checklines, deadline);\n    var diffs_b = this.diff_main(text1_b, text2_b, checklines, deadline);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  if (checklines && text1.length > 100 && text2.length > 100) {\n    return this.diff_lineMode_(text1, text2, deadline);\n  }\n\n  return this.diff_bisect_(text1, text2, deadline);\n};\n\n\n/**\n * Do a quick line-level diff on both strings, then rediff the parts for\n * greater accuracy.\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_lineMode_ = function(text1, text2, deadline) {\n  // Scan the text on a line-by-line basis first.\n  var a = this.diff_linesToChars_(text1, text2);\n  text1 = a.chars1;\n  text2 = a.chars2;\n  var linearray = a.lineArray;\n\n  var diffs = this.diff_main(text1, text2, false, deadline);\n\n  // Convert the diff back to original text.\n  this.diff_charsToLines_(diffs, linearray);\n  // Eliminate freak matches (e.g. blank lines)\n  this.diff_cleanupSemantic(diffs);\n\n  // Rediff any replacement blocks, this time character-by-character.\n  // Add a dummy entry at the end.\n  diffs.push([DIFF_EQUAL, '']);\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete >= 1 && count_insert >= 1) {\n          // Delete the offending records and add the merged ones.\n          diffs.splice(pointer - count_delete - count_insert,\n                       count_delete + count_insert);\n          pointer = pointer - count_delete - count_insert;\n          var a = this.diff_main(text_delete, text_insert, false, deadline);\n          for (var j = a.length - 1; j >= 0; j--) {\n            diffs.splice(pointer, 0, a[j]);\n          }\n          pointer = pointer + a.length;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n    pointer++;\n  }\n  diffs.pop();  // Remove the dummy entry at the end.\n\n  return diffs;\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisect_ = function(text1, text2, deadline) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 != 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Bail out if deadline is reached.\n    if ((new Date()).getTime() > deadline) {\n      break;\n    }\n\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 == -d || (k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (x1 < text1_length && y1 < text2_length &&\n             text1.charAt(x1) == text2.charAt(y1)) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 == -d || (k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (x2 < text1_length && y2 < text2_length &&\n             text1.charAt(text1_length - x2 - 1) ==\n             text2.charAt(text2_length - y2 - 1)) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisectSplit_ = function(text1, text2, x, y,\n    deadline) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = this.diff_main(text1a, text2a, false, deadline);\n  var diffsb = this.diff_main(text1b, text2b, false, deadline);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Split two texts into an array of strings.  Reduce the texts to a string of\n * hashes where each Unicode character represents one line.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {{chars1: string, chars2: string, lineArray: !Array.<string>}}\n *     An object containing the encoded text1, the encoded text2 and\n *     the array of unique strings.\n *     The zeroth element of the array of unique strings is intentionally blank.\n * @private\n */\ndiff_match_patch.prototype.diff_linesToChars_ = function(text1, text2) {\n  var lineArray = [];  // e.g. lineArray[4] == 'Hello\\n'\n  var lineHash = {};   // e.g. lineHash['Hello\\n'] == 4\n\n  // '\\x00' is a valid character, but various debuggers don't like it.\n  // So we'll insert a junk entry to avoid generating a null character.\n  lineArray[0] = '';\n\n  /**\n   * Split a text into an array of strings.  Reduce the texts to a string of\n   * hashes where each Unicode character represents one line.\n   * Modifies linearray and linehash through being a closure.\n   * @param {string} text String to encode.\n   * @return {string} Encoded string.\n   * @private\n   */\n  function diff_linesToCharsMunge_(text) {\n    var chars = '';\n    // Walk the text, pulling out a substring for each line.\n    // text.split('\\n') would would temporarily double our memory footprint.\n    // Modifying text would create many large strings to garbage collect.\n    var lineStart = 0;\n    var lineEnd = -1;\n    // Keeping our own length variable is faster than looking it up.\n    var lineArrayLength = lineArray.length;\n    while (lineEnd < text.length - 1) {\n      lineEnd = text.indexOf('\\n', lineStart);\n      if (lineEnd == -1) {\n        lineEnd = text.length - 1;\n      }\n      var line = text.substring(lineStart, lineEnd + 1);\n      lineStart = lineEnd + 1;\n\n      if (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) :\n          (lineHash[line] !== undefined)) {\n        chars += String.fromCharCode(lineHash[line]);\n      } else {\n        chars += String.fromCharCode(lineArrayLength);\n        lineHash[line] = lineArrayLength;\n        lineArray[lineArrayLength++] = line;\n      }\n    }\n    return chars;\n  }\n\n  var chars1 = diff_linesToCharsMunge_(text1);\n  var chars2 = diff_linesToCharsMunge_(text2);\n  return {chars1: chars1, chars2: chars2, lineArray: lineArray};\n};\n\n\n/**\n * Rehydrate the text in a diff from a string of line hashes to real lines of\n * text.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {!Array.<string>} lineArray Array of unique strings.\n * @private\n */\ndiff_match_patch.prototype.diff_charsToLines_ = function(diffs, lineArray) {\n  for (var x = 0; x < diffs.length; x++) {\n    var chars = diffs[x][1];\n    var text = [];\n    for (var y = 0; y < chars.length; y++) {\n      text[y] = lineArray[chars.charCodeAt(y)];\n    }\n    diffs[x][1] = text.join('');\n  }\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\ndiff_match_patch.prototype.diff_commonPrefix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(pointerstart, pointermid) ==\n        text2.substring(pointerstart, pointermid)) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\ndiff_match_patch.prototype.diff_commonSuffix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 ||\n      text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n        text2.substring(text2.length - pointermid, text2.length - pointerend)) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine if the suffix of one string is the prefix of another.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of the first\n *     string and the start of the second string.\n * @private\n */\ndiff_match_patch.prototype.diff_commonOverlap_ = function(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  // Eliminate the null case.\n  if (text1_length == 0 || text2_length == 0) {\n    return 0;\n  }\n  // Truncate the longer string.\n  if (text1_length > text2_length) {\n    text1 = text1.substring(text1_length - text2_length);\n  } else if (text1_length < text2_length) {\n    text2 = text2.substring(0, text1_length);\n  }\n  var text_length = Math.min(text1_length, text2_length);\n  // Quick check for the worst case.\n  if (text1 == text2) {\n    return text_length;\n  }\n\n  // Start by looking for a single character match\n  // and increase length until no match is found.\n  // Performance analysis: http://neil.fraser.name/news/2010/11/04/\n  var best = 0;\n  var length = 1;\n  while (true) {\n    var pattern = text1.substring(text_length - length);\n    var found = text2.indexOf(pattern);\n    if (found == -1) {\n      return best;\n    }\n    length += found;\n    if (found == 0 || text1.substring(text_length - length) ==\n        text2.substring(0, length)) {\n      best = length;\n      length++;\n    }\n  }\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n * @private\n */\ndiff_match_patch.prototype.diff_halfMatch_ = function(text1, text2) {\n  if (this.Diff_Timeout <= 0) {\n    // Don't risk returning a non-optimal diff if we have unlimited time.\n    return null;\n  }\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) != -1) {\n      var prefixLength = dmp.diff_commonPrefix(longtext.substring(i),\n                                               shorttext.substring(j));\n      var suffixLength = dmp.diff_commonSuffix(longtext.substring(0, i),\n                                               shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(j - suffixLength, j) +\n            shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [best_longtext_a, best_longtext_b,\n              best_shorttext_a, best_shorttext_b, best_common];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reduce the number of edits by eliminating semantically trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupSemantic = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastequality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0;  // Index of current position.\n  // Number of characters that changed prior to the equality.\n  var length_insertions1 = 0;\n  var length_deletions1 = 0;\n  // Number of characters that changed after the equality.\n  var length_insertions2 = 0;\n  var length_deletions2 = 0;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      equalities[equalitiesLength++] = pointer;\n      length_insertions1 = length_insertions2;\n      length_deletions1 = length_deletions2;\n      length_insertions2 = 0;\n      length_deletions2 = 0;\n      lastequality = diffs[pointer][1];\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_INSERT) {\n        length_insertions2 += diffs[pointer][1].length;\n      } else {\n        length_deletions2 += diffs[pointer][1].length;\n      }\n      // Eliminate an equality that is smaller or equal to the edits on both\n      // sides of it.\n      if (lastequality && (lastequality.length <=\n          Math.max(length_insertions1, length_deletions1)) &&\n          (lastequality.length <= Math.max(length_insertions2,\n                                           length_deletions2))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     [DIFF_DELETE, lastequality]);\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        // Throw away the equality we just deleted.\n        equalitiesLength--;\n        // Throw away the previous equality (it needs to be reevaluated).\n        equalitiesLength--;\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n        length_insertions1 = 0;  // Reset the counters.\n        length_deletions1 = 0;\n        length_insertions2 = 0;\n        length_deletions2 = 0;\n        lastequality = null;\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  // Normalize the diff.\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n  this.diff_cleanupSemanticLossless(diffs);\n\n  // Find any overlaps between deletions and insertions.\n  // e.g: <del>abcxxx</del><ins>xxxdef</ins>\n  //   -> <del>abc</del>xxx<ins>def</ins>\n  // e.g: <del>xxxabc</del><ins>defxxx</ins>\n  //   -> <ins>def</ins>xxx<del>abc</del>\n  // Only extract an overlap if it is as big as the edit ahead or behind it.\n  pointer = 1;\n  while (pointer < diffs.length) {\n    if (diffs[pointer - 1][0] == DIFF_DELETE &&\n        diffs[pointer][0] == DIFF_INSERT) {\n      var deletion = diffs[pointer - 1][1];\n      var insertion = diffs[pointer][1];\n      var overlap_length1 = this.diff_commonOverlap_(deletion, insertion);\n      var overlap_length2 = this.diff_commonOverlap_(insertion, deletion);\n      if (overlap_length1 >= overlap_length2) {\n        if (overlap_length1 >= deletion.length / 2 ||\n            overlap_length1 >= insertion.length / 2) {\n          // Overlap found.  Insert an equality and trim the surrounding edits.\n          diffs.splice(pointer, 0,\n              [DIFF_EQUAL, insertion.substring(0, overlap_length1)]);\n          diffs[pointer - 1][1] =\n              deletion.substring(0, deletion.length - overlap_length1);\n          diffs[pointer + 1][1] = insertion.substring(overlap_length1);\n          pointer++;\n        }\n      } else {\n        if (overlap_length2 >= deletion.length / 2 ||\n            overlap_length2 >= insertion.length / 2) {\n          // Reverse overlap found.\n          // Insert an equality and swap and trim the surrounding edits.\n          diffs.splice(pointer, 0,\n              [DIFF_EQUAL, deletion.substring(0, overlap_length2)]);\n          diffs[pointer - 1][0] = DIFF_INSERT;\n          diffs[pointer - 1][1] =\n              insertion.substring(0, insertion.length - overlap_length2);\n          diffs[pointer + 1][0] = DIFF_DELETE;\n          diffs[pointer + 1][1] =\n              deletion.substring(overlap_length2);\n          pointer++;\n        }\n      }\n      pointer++;\n    }\n    pointer++;\n  }\n};\n\n\n/**\n * Look for single edits surrounded on both sides by equalities\n * which can be shifted sideways to align the edit to a word boundary.\n * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupSemanticLossless = function(diffs) {\n  /**\n   * Given two strings, compute a score representing whether the internal\n   * boundary falls on logical boundaries.\n   * Scores range from 6 (best) to 0 (worst).\n   * Closure, but does not reference any external variables.\n   * @param {string} one First string.\n   * @param {string} two Second string.\n   * @return {number} The score.\n   * @private\n   */\n  function diff_cleanupSemanticScore_(one, two) {\n    if (!one || !two) {\n      // Edges are the best.\n      return 6;\n    }\n\n    // Each port of this function behaves slightly differently due to\n    // subtle differences in each language's definition of things like\n    // 'whitespace'.  Since this function's purpose is largely cosmetic,\n    // the choice has been made to use each language's native features\n    // rather than force total conformity.\n    var char1 = one.charAt(one.length - 1);\n    var char2 = two.charAt(0);\n    var nonAlphaNumeric1 = char1.match(diff_match_patch.nonAlphaNumericRegex_);\n    var nonAlphaNumeric2 = char2.match(diff_match_patch.nonAlphaNumericRegex_);\n    var whitespace1 = nonAlphaNumeric1 &&\n        char1.match(diff_match_patch.whitespaceRegex_);\n    var whitespace2 = nonAlphaNumeric2 &&\n        char2.match(diff_match_patch.whitespaceRegex_);\n    var lineBreak1 = whitespace1 &&\n        char1.match(diff_match_patch.linebreakRegex_);\n    var lineBreak2 = whitespace2 &&\n        char2.match(diff_match_patch.linebreakRegex_);\n    var blankLine1 = lineBreak1 &&\n        one.match(diff_match_patch.blanklineEndRegex_);\n    var blankLine2 = lineBreak2 &&\n        two.match(diff_match_patch.blanklineStartRegex_);\n\n    if (blankLine1 || blankLine2) {\n      // Five points for blank lines.\n      return 5;\n    } else if (lineBreak1 || lineBreak2) {\n      // Four points for line breaks.\n      return 4;\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\n      // Three points for end of sentences.\n      return 3;\n    } else if (whitespace1 || whitespace2) {\n      // Two points for whitespace.\n      return 2;\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\n      // One point for non-alphanumeric.\n      return 1;\n    }\n    return 0;\n  }\n\n  var pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      var equality1 = diffs[pointer - 1][1];\n      var edit = diffs[pointer][1];\n      var equality2 = diffs[pointer + 1][1];\n\n      // First, shift the edit as far left as possible.\n      var commonOffset = this.diff_commonSuffix(equality1, edit);\n      if (commonOffset) {\n        var commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\n        equality2 = commonString + equality2;\n      }\n\n      // Second, step character by character right, looking for the best fit.\n      var bestEquality1 = equality1;\n      var bestEdit = edit;\n      var bestEquality2 = equality2;\n      var bestScore = diff_cleanupSemanticScore_(equality1, edit) +\n          diff_cleanupSemanticScore_(edit, equality2);\n      while (edit.charAt(0) === equality2.charAt(0)) {\n        equality1 += edit.charAt(0);\n        edit = edit.substring(1) + equality2.charAt(0);\n        equality2 = equality2.substring(1);\n        var score = diff_cleanupSemanticScore_(equality1, edit) +\n            diff_cleanupSemanticScore_(edit, equality2);\n        // The >= encourages trailing rather than leading whitespace on edits.\n        if (score >= bestScore) {\n          bestScore = score;\n          bestEquality1 = equality1;\n          bestEdit = edit;\n          bestEquality2 = equality2;\n        }\n      }\n\n      if (diffs[pointer - 1][1] != bestEquality1) {\n        // We have an improvement, save it back to the diff.\n        if (bestEquality1) {\n          diffs[pointer - 1][1] = bestEquality1;\n        } else {\n          diffs.splice(pointer - 1, 1);\n          pointer--;\n        }\n        diffs[pointer][1] = bestEdit;\n        if (bestEquality2) {\n          diffs[pointer + 1][1] = bestEquality2;\n        } else {\n          diffs.splice(pointer + 1, 1);\n          pointer--;\n        }\n      }\n    }\n    pointer++;\n  }\n};\n\n// Define some regex patterns for matching boundaries.\ndiff_match_patch.nonAlphaNumericRegex_ = /[^a-zA-Z0-9]/;\ndiff_match_patch.whitespaceRegex_ = /\\s/;\ndiff_match_patch.linebreakRegex_ = /[\\r\\n]/;\ndiff_match_patch.blanklineEndRegex_ = /\\n\\r?\\n$/;\ndiff_match_patch.blanklineStartRegex_ = /^\\r?\\n\\r?\\n/;\n\n/**\n * Reduce the number of edits by eliminating operationally trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupEfficiency = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastequality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0;  // Index of current position.\n  // Is there an insertion operation before the last equality.\n  var pre_ins = false;\n  // Is there a deletion operation before the last equality.\n  var pre_del = false;\n  // Is there an insertion operation after the last equality.\n  var post_ins = false;\n  // Is there a deletion operation after the last equality.\n  var post_del = false;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      if (diffs[pointer][1].length < this.Diff_EditCost &&\n          (post_ins || post_del)) {\n        // Candidate found.\n        equalities[equalitiesLength++] = pointer;\n        pre_ins = post_ins;\n        pre_del = post_del;\n        lastequality = diffs[pointer][1];\n      } else {\n        // Not a candidate, and can never become one.\n        equalitiesLength = 0;\n        lastequality = null;\n      }\n      post_ins = post_del = false;\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_DELETE) {\n        post_del = true;\n      } else {\n        post_ins = true;\n      }\n      /*\n       * Five types to be split:\n       * <ins>A</ins><del>B</del>XY<ins>C</ins><del>D</del>\n       * <ins>A</ins>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<ins>C</ins>\n       * <ins>A</del>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<del>C</del>\n       */\n      if (lastequality && ((pre_ins && pre_del && post_ins && post_del) ||\n                           ((lastequality.length < this.Diff_EditCost / 2) &&\n                            (pre_ins + pre_del + post_ins + post_del) == 3))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     [DIFF_DELETE, lastequality]);\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        equalitiesLength--;  // Throw away the equality we just deleted;\n        lastequality = null;\n        if (pre_ins && pre_del) {\n          // No changes made which could affect previous entry, keep going.\n          post_ins = post_del = true;\n          equalitiesLength = 0;\n        } else {\n          equalitiesLength--;  // Throw away the previous equality.\n          pointer = equalitiesLength > 0 ?\n              equalities[equalitiesLength - 1] : -1;\n          post_ins = post_del = false;\n        }\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupMerge = function(diffs) {\n  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete + count_insert > 1) {\n          if (count_delete !== 0 && count_insert !== 0) {\n            // Factor out any common prefixies.\n            commonlength = this.diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if ((pointer - count_delete - count_insert) > 0 &&\n                  diffs[pointer - count_delete - count_insert - 1][0] ==\n                  DIFF_EQUAL) {\n                diffs[pointer - count_delete - count_insert - 1][1] +=\n                    text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, [DIFF_EQUAL,\n                                    text_insert.substring(0, commonlength)]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixies.\n            commonlength = this.diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] = text_insert.substring(text_insert.length -\n                  commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length -\n                  commonlength);\n              text_delete = text_delete.substring(0, text_delete.length -\n                  commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          if (count_delete === 0) {\n            diffs.splice(pointer - count_insert,\n                count_delete + count_insert, [DIFF_INSERT, text_insert]);\n          } else if (count_insert === 0) {\n            diffs.splice(pointer - count_delete,\n                count_delete + count_insert, [DIFF_DELETE, text_delete]);\n          } else {\n            diffs.splice(pointer - count_delete - count_insert,\n                count_delete + count_insert, [DIFF_DELETE, text_delete],\n                [DIFF_INSERT, text_insert]);\n          }\n          pointer = pointer - count_delete - count_insert +\n                    (count_delete ? 1 : 0) + (count_insert ? 1 : 0) + 1;\n        } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n          diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n            diffs[pointer][1].substring(0, diffs[pointer][1].length -\n                                        diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n          diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n            diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n            diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * loc is a location in text1, compute and return the equivalent location in\n * text2.\n * e.g. 'The cat' vs 'The big cat', 1->1, 5->8\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {number} loc Location within text1.\n * @return {number} Location within text2.\n */\ndiff_match_patch.prototype.diff_xIndex = function(diffs, loc) {\n  var chars1 = 0;\n  var chars2 = 0;\n  var last_chars1 = 0;\n  var last_chars2 = 0;\n  var x;\n  for (x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {  // Equality or deletion.\n      chars1 += diffs[x][1].length;\n    }\n    if (diffs[x][0] !== DIFF_DELETE) {  // Equality or insertion.\n      chars2 += diffs[x][1].length;\n    }\n    if (chars1 > loc) {  // Overshot the location.\n      break;\n    }\n    last_chars1 = chars1;\n    last_chars2 = chars2;\n  }\n  // Was the location was deleted?\n  if (diffs.length != x && diffs[x][0] === DIFF_DELETE) {\n    return last_chars2;\n  }\n  // Add the remaining character length.\n  return last_chars2 + (loc - last_chars1);\n};\n\n\n/**\n * Convert a diff array into a pretty HTML report.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} HTML representation.\n */\ndiff_match_patch.prototype.diff_prettyHtml = function(diffs) {\n  var html = [];\n  var pattern_amp = /&/g;\n  var pattern_lt = /</g;\n  var pattern_gt = />/g;\n  var pattern_para = /\\n/g;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];    // Operation (insert, delete, equal)\n    var data = diffs[x][1];  // Text of change.\n    var text = data.replace(pattern_amp, '&amp;').replace(pattern_lt, '&lt;')\n        .replace(pattern_gt, '&gt;').replace(pattern_para, '&para;<br>');\n    switch (op) {\n      case DIFF_INSERT:\n        html[x] = '<ins style=\"background:#e6ffe6;\">' + text + '</ins>';\n        break;\n      case DIFF_DELETE:\n        html[x] = '<del style=\"background:#ffe6e6;\">' + text + '</del>';\n        break;\n      case DIFF_EQUAL:\n        html[x] = '<span>' + text + '</span>';\n        break;\n    }\n  }\n  return html.join('');\n};\n\n\n/**\n * Compute and return the source text (all equalities and deletions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Source text.\n */\ndiff_match_patch.prototype.diff_text1 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute and return the destination text (all equalities and insertions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Destination text.\n */\ndiff_match_patch.prototype.diff_text2 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_DELETE) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute the Levenshtein distance; the number of inserted, deleted or\n * substituted characters.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {number} Number of changes.\n */\ndiff_match_patch.prototype.diff_levenshtein = function(diffs) {\n  var levenshtein = 0;\n  var insertions = 0;\n  var deletions = 0;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];\n    var data = diffs[x][1];\n    switch (op) {\n      case DIFF_INSERT:\n        insertions += data.length;\n        break;\n      case DIFF_DELETE:\n        deletions += data.length;\n        break;\n      case DIFF_EQUAL:\n        // A deletion and an insertion is one substitution.\n        levenshtein += Math.max(insertions, deletions);\n        insertions = 0;\n        deletions = 0;\n        break;\n    }\n  }\n  levenshtein += Math.max(insertions, deletions);\n  return levenshtein;\n};\n\n\n/**\n * Crush the diff into an encoded string which describes the operations\n * required to transform text1 into text2.\n * E.g. =3\\t-2\\t+ing  -> Keep 3 chars, delete 2 chars, insert 'ing'.\n * Operations are tab-separated.  Inserted text is escaped using %xx notation.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Delta text.\n */\ndiff_match_patch.prototype.diff_toDelta = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    switch (diffs[x][0]) {\n      case DIFF_INSERT:\n        text[x] = '+' + encodeURI(diffs[x][1]);\n        break;\n      case DIFF_DELETE:\n        text[x] = '-' + diffs[x][1].length;\n        break;\n      case DIFF_EQUAL:\n        text[x] = '=' + diffs[x][1].length;\n        break;\n    }\n  }\n  return text.join('\\t').replace(/%20/g, ' ');\n};\n\n\n/**\n * Given the original text1, and an encoded string which describes the\n * operations required to transform text1 into text2, compute the full diff.\n * @param {string} text1 Source string for the diff.\n * @param {string} delta Delta text.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @throws {!Error} If invalid input.\n */\ndiff_match_patch.prototype.diff_fromDelta = function(text1, delta) {\n  var diffs = [];\n  var diffsLength = 0;  // Keeping our own length var is faster in JS.\n  var pointer = 0;  // Cursor in text1\n  var tokens = delta.split(/\\t/g);\n  for (var x = 0; x < tokens.length; x++) {\n    // Each token begins with a one character parameter which specifies the\n    // operation of this token (delete, insert, equality).\n    var param = tokens[x].substring(1);\n    switch (tokens[x].charAt(0)) {\n      case '+':\n        try {\n          diffs[diffsLength++] = [DIFF_INSERT, decodeURI(param)];\n        } catch (ex) {\n          // Malformed URI sequence.\n          throw new Error('Illegal escape in diff_fromDelta: ' + param);\n        }\n        break;\n      case '-':\n        // Fall through.\n      case '=':\n        var n = parseInt(param, 10);\n        if (isNaN(n) || n < 0) {\n          throw new Error('Invalid number in diff_fromDelta: ' + param);\n        }\n        var text = text1.substring(pointer, pointer += n);\n        if (tokens[x].charAt(0) == '=') {\n          diffs[diffsLength++] = [DIFF_EQUAL, text];\n        } else {\n          diffs[diffsLength++] = [DIFF_DELETE, text];\n        }\n        break;\n      default:\n        // Blank tokens are ok (from a trailing \\t).\n        // Anything else is an error.\n        if (tokens[x]) {\n          throw new Error('Invalid diff operation in diff_fromDelta: ' +\n                          tokens[x]);\n        }\n    }\n  }\n  if (pointer != text1.length) {\n    throw new Error('Delta length (' + pointer +\n        ') does not equal source text length (' + text1.length + ').');\n  }\n  return diffs;\n};\n\n\n//  MATCH FUNCTIONS\n\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc'.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n */\ndiff_match_patch.prototype.match_main = function(text, pattern, loc) {\n  // Check for null inputs.\n  if (text == null || pattern == null || loc == null) {\n    throw new Error('Null input. (match_main)');\n  }\n\n  loc = Math.max(0, Math.min(loc, text.length));\n  if (text == pattern) {\n    // Shortcut (potentially not guaranteed by the algorithm)\n    return 0;\n  } else if (!text.length) {\n    // Nothing to match.\n    return -1;\n  } else if (text.substring(loc, loc + pattern.length) == pattern) {\n    // Perfect match at the perfect spot!  (Includes case of null pattern)\n    return loc;\n  } else {\n    // Do a fuzzy compare.\n    return this.match_bitap_(text, pattern, loc);\n  }\n};\n\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc' using the\n * Bitap algorithm.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n * @private\n */\ndiff_match_patch.prototype.match_bitap_ = function(text, pattern, loc) {\n  if (pattern.length > this.Match_MaxBits) {\n    throw new Error('Pattern too long for this browser.');\n  }\n\n  // Initialise the alphabet.\n  var s = this.match_alphabet_(pattern);\n\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Compute and return the score for a match with e errors and x location.\n   * Accesses loc and pattern through being a closure.\n   * @param {number} e Number of errors in match.\n   * @param {number} x Location of match.\n   * @return {number} Overall score for match (0.0 = good, 1.0 = bad).\n   * @private\n   */\n  function match_bitapScore_(e, x) {\n    var accuracy = e / pattern.length;\n    var proximity = Math.abs(loc - x);\n    if (!dmp.Match_Distance) {\n      // Dodge divide by zero error.\n      return proximity ? 1.0 : accuracy;\n    }\n    return accuracy + (proximity / dmp.Match_Distance);\n  }\n\n  // Highest score beyond which we give up.\n  var score_threshold = this.Match_Threshold;\n  // Is there a nearby exact match? (speedup)\n  var best_loc = text.indexOf(pattern, loc);\n  if (best_loc != -1) {\n    score_threshold = Math.min(match_bitapScore_(0, best_loc), score_threshold);\n    // What about in the other direction? (speedup)\n    best_loc = text.lastIndexOf(pattern, loc + pattern.length);\n    if (best_loc != -1) {\n      score_threshold =\n          Math.min(match_bitapScore_(0, best_loc), score_threshold);\n    }\n  }\n\n  // Initialise the bit arrays.\n  var matchmask = 1 << (pattern.length - 1);\n  best_loc = -1;\n\n  var bin_min, bin_mid;\n  var bin_max = pattern.length + text.length;\n  var last_rd;\n  for (var d = 0; d < pattern.length; d++) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from 'loc' we can stray at this\n    // error level.\n    bin_min = 0;\n    bin_mid = bin_max;\n    while (bin_min < bin_mid) {\n      if (match_bitapScore_(d, loc + bin_mid) <= score_threshold) {\n        bin_min = bin_mid;\n      } else {\n        bin_max = bin_mid;\n      }\n      bin_mid = Math.floor((bin_max - bin_min) / 2 + bin_min);\n    }\n    // Use the result from this iteration as the maximum for the next.\n    bin_max = bin_mid;\n    var start = Math.max(1, loc - bin_mid + 1);\n    var finish = Math.min(loc + bin_mid, text.length) + pattern.length;\n\n    var rd = Array(finish + 2);\n    rd[finish + 1] = (1 << d) - 1;\n    for (var j = finish; j >= start; j--) {\n      // The alphabet (s) is a sparse hash, so the following line generates\n      // warnings.\n      var charMatch = s[text.charAt(j - 1)];\n      if (d === 0) {  // First pass: exact match.\n        rd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\n      } else {  // Subsequent passes: fuzzy match.\n        rd[j] = (((rd[j + 1] << 1) | 1) & charMatch) |\n                (((last_rd[j + 1] | last_rd[j]) << 1) | 1) |\n                last_rd[j + 1];\n      }\n      if (rd[j] & matchmask) {\n        var score = match_bitapScore_(d, j - 1);\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (score <= score_threshold) {\n          // Told you so.\n          score_threshold = score;\n          best_loc = j - 1;\n          if (best_loc > loc) {\n            // When passing loc, don't exceed our current distance from loc.\n            start = Math.max(1, 2 * loc - best_loc);\n          } else {\n            // Already passed loc, downhill from here on in.\n            break;\n          }\n        }\n      }\n    }\n    // No hope for a (better) match at greater error levels.\n    if (match_bitapScore_(d + 1, loc) > score_threshold) {\n      break;\n    }\n    last_rd = rd;\n  }\n  return best_loc;\n};\n\n\n/**\n * Initialise the alphabet for the Bitap algorithm.\n * @param {string} pattern The text to encode.\n * @return {!Object} Hash of character locations.\n * @private\n */\ndiff_match_patch.prototype.match_alphabet_ = function(pattern) {\n  var s = {};\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] = 0;\n  }\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] |= 1 << (pattern.length - i - 1);\n  }\n  return s;\n};\n\n\n//  PATCH FUNCTIONS\n\n\n/**\n * Increase the context until it is unique,\n * but don't let the pattern expand beyond Match_MaxBits.\n * @param {!diff_match_patch.patch_obj} patch The patch to grow.\n * @param {string} text Source text.\n * @private\n */\ndiff_match_patch.prototype.patch_addContext_ = function(patch, text) {\n  if (text.length == 0) {\n    return;\n  }\n  var pattern = text.substring(patch.start2, patch.start2 + patch.length1);\n  var padding = 0;\n\n  // Look for the first and last matches of pattern in text.  If two different\n  // matches are found, increase the pattern length.\n  while (text.indexOf(pattern) != text.lastIndexOf(pattern) &&\n         pattern.length < this.Match_MaxBits - this.Patch_Margin -\n         this.Patch_Margin) {\n    padding += this.Patch_Margin;\n    pattern = text.substring(patch.start2 - padding,\n                             patch.start2 + patch.length1 + padding);\n  }\n  // Add one chunk for good luck.\n  padding += this.Patch_Margin;\n\n  // Add the prefix.\n  var prefix = text.substring(patch.start2 - padding, patch.start2);\n  if (prefix) {\n    patch.diffs.unshift([DIFF_EQUAL, prefix]);\n  }\n  // Add the suffix.\n  var suffix = text.substring(patch.start2 + patch.length1,\n                              patch.start2 + patch.length1 + padding);\n  if (suffix) {\n    patch.diffs.push([DIFF_EQUAL, suffix]);\n  }\n\n  // Roll back the start points.\n  patch.start1 -= prefix.length;\n  patch.start2 -= prefix.length;\n  // Extend the lengths.\n  patch.length1 += prefix.length + suffix.length;\n  patch.length2 += prefix.length + suffix.length;\n};\n\n\n/**\n * Compute a list of patches to turn text1 into text2.\n * Use diffs if provided, otherwise compute it ourselves.\n * There are four ways to call this function, depending on what data is\n * available to the caller:\n * Method 1:\n * a = text1, b = text2\n * Method 2:\n * a = diffs\n * Method 3 (optimal):\n * a = text1, b = diffs\n * Method 4 (deprecated, use method 3):\n * a = text1, b = text2, c = diffs\n *\n * @param {string|!Array.<!diff_match_patch.Diff>} a text1 (methods 1,3,4) or\n * Array of diff tuples for text1 to text2 (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>} opt_b text2 (methods 1,4) or\n * Array of diff tuples for text1 to text2 (method 3) or undefined (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>} opt_c Array of diff tuples\n * for text1 to text2 (method 4) or undefined (methods 1,2,3).\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_make = function(a, opt_b, opt_c) {\n  var text1, diffs;\n  if (typeof a == 'string' && typeof opt_b == 'string' &&\n      typeof opt_c == 'undefined') {\n    // Method 1: text1, text2\n    // Compute diffs from text1 and text2.\n    text1 = /** @type {string} */(a);\n    diffs = this.diff_main(text1, /** @type {string} */(opt_b), true);\n    if (diffs.length > 2) {\n      this.diff_cleanupSemantic(diffs);\n      this.diff_cleanupEfficiency(diffs);\n    }\n  } else if (a && typeof a == 'object' && typeof opt_b == 'undefined' &&\n      typeof opt_c == 'undefined') {\n    // Method 2: diffs\n    // Compute text1 from diffs.\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(a);\n    text1 = this.diff_text1(diffs);\n  } else if (typeof a == 'string' && opt_b && typeof opt_b == 'object' &&\n      typeof opt_c == 'undefined') {\n    // Method 3: text1, diffs\n    text1 = /** @type {string} */(a);\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_b);\n  } else if (typeof a == 'string' && typeof opt_b == 'string' &&\n      opt_c && typeof opt_c == 'object') {\n    // Method 4: text1, text2, diffs\n    // text2 is not used.\n    text1 = /** @type {string} */(a);\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_c);\n  } else {\n    throw new Error('Unknown call format to patch_make.');\n  }\n\n  if (diffs.length === 0) {\n    return [];  // Get rid of the null case.\n  }\n  var patches = [];\n  var patch = new diff_match_patch.patch_obj();\n  var patchDiffLength = 0;  // Keeping our own length var is faster in JS.\n  var char_count1 = 0;  // Number of characters into the text1 string.\n  var char_count2 = 0;  // Number of characters into the text2 string.\n  // Start with text1 (prepatch_text) and apply the diffs until we arrive at\n  // text2 (postpatch_text).  We recreate the patches one by one to determine\n  // context info.\n  var prepatch_text = text1;\n  var postpatch_text = text1;\n  for (var x = 0; x < diffs.length; x++) {\n    var diff_type = diffs[x][0];\n    var diff_text = diffs[x][1];\n\n    if (!patchDiffLength && diff_type !== DIFF_EQUAL) {\n      // A new patch starts here.\n      patch.start1 = char_count1;\n      patch.start2 = char_count2;\n    }\n\n    switch (diff_type) {\n      case DIFF_INSERT:\n        patch.diffs[patchDiffLength++] = diffs[x];\n        patch.length2 += diff_text.length;\n        postpatch_text = postpatch_text.substring(0, char_count2) + diff_text +\n                         postpatch_text.substring(char_count2);\n        break;\n      case DIFF_DELETE:\n        patch.length1 += diff_text.length;\n        patch.diffs[patchDiffLength++] = diffs[x];\n        postpatch_text = postpatch_text.substring(0, char_count2) +\n                         postpatch_text.substring(char_count2 +\n                             diff_text.length);\n        break;\n      case DIFF_EQUAL:\n        if (diff_text.length <= 2 * this.Patch_Margin &&\n            patchDiffLength && diffs.length != x + 1) {\n          // Small equality inside a patch.\n          patch.diffs[patchDiffLength++] = diffs[x];\n          patch.length1 += diff_text.length;\n          patch.length2 += diff_text.length;\n        } else if (diff_text.length >= 2 * this.Patch_Margin) {\n          // Time for a new patch.\n          if (patchDiffLength) {\n            this.patch_addContext_(patch, prepatch_text);\n            patches.push(patch);\n            patch = new diff_match_patch.patch_obj();\n            patchDiffLength = 0;\n            // Unlike Unidiff, our patch lists have a rolling context.\n            // http://code.google.com/p/google-diff-match-patch/wiki/Unidiff\n            // Update prepatch text & pos to reflect the application of the\n            // just completed patch.\n            prepatch_text = postpatch_text;\n            char_count1 = char_count2;\n          }\n        }\n        break;\n    }\n\n    // Update the current character count.\n    if (diff_type !== DIFF_INSERT) {\n      char_count1 += diff_text.length;\n    }\n    if (diff_type !== DIFF_DELETE) {\n      char_count2 += diff_text.length;\n    }\n  }\n  // Pick up the leftover patch if not empty.\n  if (patchDiffLength) {\n    this.patch_addContext_(patch, prepatch_text);\n    patches.push(patch);\n  }\n\n  return patches;\n};\n\n\n/**\n * Given an array of patches, return another array that is identical.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_deepCopy = function(patches) {\n  // Making deep copies is hard in JavaScript.\n  var patchesCopy = [];\n  for (var x = 0; x < patches.length; x++) {\n    var patch = patches[x];\n    var patchCopy = new diff_match_patch.patch_obj();\n    patchCopy.diffs = [];\n    for (var y = 0; y < patch.diffs.length; y++) {\n      patchCopy.diffs[y] = patch.diffs[y].slice();\n    }\n    patchCopy.start1 = patch.start1;\n    patchCopy.start2 = patch.start2;\n    patchCopy.length1 = patch.length1;\n    patchCopy.length2 = patch.length2;\n    patchesCopy[x] = patchCopy;\n  }\n  return patchesCopy;\n};\n\n\n/**\n * Merge a set of patches onto the text.  Return a patched text, as well\n * as a list of true/false values indicating which patches were applied.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @param {string} text Old text.\n * @return {!Array.<string|!Array.<boolean>>} Two element Array, containing the\n *      new text and an array of boolean values.\n */\ndiff_match_patch.prototype.patch_apply = function(patches, text) {\n  if (patches.length == 0) {\n    return [text, []];\n  }\n\n  // Deep copy the patches so that no changes are made to originals.\n  patches = this.patch_deepCopy(patches);\n\n  var nullPadding = this.patch_addPadding(patches);\n  text = nullPadding + text + nullPadding;\n\n  this.patch_splitMax(patches);\n  // delta keeps track of the offset between the expected and actual location\n  // of the previous patch.  If there are patches expected at positions 10 and\n  // 20, but the first patch was found at 12, delta is 2 and the second patch\n  // has an effective expected position of 22.\n  var delta = 0;\n  var results = [];\n  for (var x = 0; x < patches.length; x++) {\n    var expected_loc = patches[x].start2 + delta;\n    var text1 = this.diff_text1(patches[x].diffs);\n    var start_loc;\n    var end_loc = -1;\n    if (text1.length > this.Match_MaxBits) {\n      // patch_splitMax will only provide an oversized pattern in the case of\n      // a monster delete.\n      start_loc = this.match_main(text, text1.substring(0, this.Match_MaxBits),\n                                  expected_loc);\n      if (start_loc != -1) {\n        end_loc = this.match_main(text,\n            text1.substring(text1.length - this.Match_MaxBits),\n            expected_loc + text1.length - this.Match_MaxBits);\n        if (end_loc == -1 || start_loc >= end_loc) {\n          // Can't find valid trailing context.  Drop this patch.\n          start_loc = -1;\n        }\n      }\n    } else {\n      start_loc = this.match_main(text, text1, expected_loc);\n    }\n    if (start_loc == -1) {\n      // No match found.  :(\n      results[x] = false;\n      // Subtract the delta for this failed patch from subsequent patches.\n      delta -= patches[x].length2 - patches[x].length1;\n    } else {\n      // Found a match.  :)\n      results[x] = true;\n      delta = start_loc - expected_loc;\n      var text2;\n      if (end_loc == -1) {\n        text2 = text.substring(start_loc, start_loc + text1.length);\n      } else {\n        text2 = text.substring(start_loc, end_loc + this.Match_MaxBits);\n      }\n      if (text1 == text2) {\n        // Perfect match, just shove the replacement text in.\n        text = text.substring(0, start_loc) +\n               this.diff_text2(patches[x].diffs) +\n               text.substring(start_loc + text1.length);\n      } else {\n        // Imperfect match.  Run a diff to get a framework of equivalent\n        // indices.\n        var diffs = this.diff_main(text1, text2, false);\n        if (text1.length > this.Match_MaxBits &&\n            this.diff_levenshtein(diffs) / text1.length >\n            this.Patch_DeleteThreshold) {\n          // The end points match, but the content is unacceptably bad.\n          results[x] = false;\n        } else {\n          this.diff_cleanupSemanticLossless(diffs);\n          var index1 = 0;\n          var index2;\n          for (var y = 0; y < patches[x].diffs.length; y++) {\n            var mod = patches[x].diffs[y];\n            if (mod[0] !== DIFF_EQUAL) {\n              index2 = this.diff_xIndex(diffs, index1);\n            }\n            if (mod[0] === DIFF_INSERT) {  // Insertion\n              text = text.substring(0, start_loc + index2) + mod[1] +\n                     text.substring(start_loc + index2);\n            } else if (mod[0] === DIFF_DELETE) {  // Deletion\n              text = text.substring(0, start_loc + index2) +\n                     text.substring(start_loc + this.diff_xIndex(diffs,\n                         index1 + mod[1].length));\n            }\n            if (mod[0] !== DIFF_DELETE) {\n              index1 += mod[1].length;\n            }\n          }\n        }\n      }\n    }\n  }\n  // Strip the padding off.\n  text = text.substring(nullPadding.length, text.length - nullPadding.length);\n  return [text, results];\n};\n\n\n/**\n * Add some padding on text start and end so that edges can match something.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {string} The padding string added to each side.\n */\ndiff_match_patch.prototype.patch_addPadding = function(patches) {\n  var paddingLength = this.Patch_Margin;\n  var nullPadding = '';\n  for (var x = 1; x <= paddingLength; x++) {\n    nullPadding += String.fromCharCode(x);\n  }\n\n  // Bump all the patches forward.\n  for (var x = 0; x < patches.length; x++) {\n    patches[x].start1 += paddingLength;\n    patches[x].start2 += paddingLength;\n  }\n\n  // Add some padding on start of first diff.\n  var patch = patches[0];\n  var diffs = patch.diffs;\n  if (diffs.length == 0 || diffs[0][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.unshift([DIFF_EQUAL, nullPadding]);\n    patch.start1 -= paddingLength;  // Should be 0.\n    patch.start2 -= paddingLength;  // Should be 0.\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[0][1].length) {\n    // Grow first equality.\n    var extraLength = paddingLength - diffs[0][1].length;\n    diffs[0][1] = nullPadding.substring(diffs[0][1].length) + diffs[0][1];\n    patch.start1 -= extraLength;\n    patch.start2 -= extraLength;\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  }\n\n  // Add some padding on end of last diff.\n  patch = patches[patches.length - 1];\n  diffs = patch.diffs;\n  if (diffs.length == 0 || diffs[diffs.length - 1][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.push([DIFF_EQUAL, nullPadding]);\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[diffs.length - 1][1].length) {\n    // Grow last equality.\n    var extraLength = paddingLength - diffs[diffs.length - 1][1].length;\n    diffs[diffs.length - 1][1] += nullPadding.substring(0, extraLength);\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  }\n\n  return nullPadding;\n};\n\n\n/**\n * Look through the patches and break up any which are longer than the maximum\n * limit of the match algorithm.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_splitMax = function(patches) {\n  var patch_size = this.Match_MaxBits;\n  for (var x = 0; x < patches.length; x++) {\n    if (patches[x].length1 <= patch_size) {\n      continue;\n    }\n    var bigpatch = patches[x];\n    // Remove the big old patch.\n    patches.splice(x--, 1);\n    var start1 = bigpatch.start1;\n    var start2 = bigpatch.start2;\n    var precontext = '';\n    while (bigpatch.diffs.length !== 0) {\n      // Create one of several smaller patches.\n      var patch = new diff_match_patch.patch_obj();\n      var empty = true;\n      patch.start1 = start1 - precontext.length;\n      patch.start2 = start2 - precontext.length;\n      if (precontext !== '') {\n        patch.length1 = patch.length2 = precontext.length;\n        patch.diffs.push([DIFF_EQUAL, precontext]);\n      }\n      while (bigpatch.diffs.length !== 0 &&\n             patch.length1 < patch_size - this.Patch_Margin) {\n        var diff_type = bigpatch.diffs[0][0];\n        var diff_text = bigpatch.diffs[0][1];\n        if (diff_type === DIFF_INSERT) {\n          // Insertions are harmless.\n          patch.length2 += diff_text.length;\n          start2 += diff_text.length;\n          patch.diffs.push(bigpatch.diffs.shift());\n          empty = false;\n        } else if (diff_type === DIFF_DELETE && patch.diffs.length == 1 &&\n                   patch.diffs[0][0] == DIFF_EQUAL &&\n                   diff_text.length > 2 * patch_size) {\n          // This is a large deletion.  Let it pass in one chunk.\n          patch.length1 += diff_text.length;\n          start1 += diff_text.length;\n          empty = false;\n          patch.diffs.push([diff_type, diff_text]);\n          bigpatch.diffs.shift();\n        } else {\n          // Deletion or equality.  Only take as much as we can stomach.\n          diff_text = diff_text.substring(0,\n              patch_size - patch.length1 - this.Patch_Margin);\n          patch.length1 += diff_text.length;\n          start1 += diff_text.length;\n          if (diff_type === DIFF_EQUAL) {\n            patch.length2 += diff_text.length;\n            start2 += diff_text.length;\n          } else {\n            empty = false;\n          }\n          patch.diffs.push([diff_type, diff_text]);\n          if (diff_text == bigpatch.diffs[0][1]) {\n            bigpatch.diffs.shift();\n          } else {\n            bigpatch.diffs[0][1] =\n                bigpatch.diffs[0][1].substring(diff_text.length);\n          }\n        }\n      }\n      // Compute the head context for the next patch.\n      precontext = this.diff_text2(patch.diffs);\n      precontext =\n          precontext.substring(precontext.length - this.Patch_Margin);\n      // Append the end context for this patch.\n      var postcontext = this.diff_text1(bigpatch.diffs)\n                            .substring(0, this.Patch_Margin);\n      if (postcontext !== '') {\n        patch.length1 += postcontext.length;\n        patch.length2 += postcontext.length;\n        if (patch.diffs.length !== 0 &&\n            patch.diffs[patch.diffs.length - 1][0] === DIFF_EQUAL) {\n          patch.diffs[patch.diffs.length - 1][1] += postcontext;\n        } else {\n          patch.diffs.push([DIFF_EQUAL, postcontext]);\n        }\n      }\n      if (!empty) {\n        patches.splice(++x, 0, patch);\n      }\n    }\n  }\n};\n\n\n/**\n * Take a list of patches and return a textual representation.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {string} Text representation of patches.\n */\ndiff_match_patch.prototype.patch_toText = function(patches) {\n  var text = [];\n  for (var x = 0; x < patches.length; x++) {\n    text[x] = patches[x];\n  }\n  return text.join('');\n};\n\n\n/**\n * Parse a textual representation of patches and return a list of Patch objects.\n * @param {string} textline Text representation of patches.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n * @throws {!Error} If invalid input.\n */\ndiff_match_patch.prototype.patch_fromText = function(textline) {\n  var patches = [];\n  if (!textline) {\n    return patches;\n  }\n  var text = textline.split('\\n');\n  var textPointer = 0;\n  var patchHeader = /^@@ -(\\d+),?(\\d*) \\+(\\d+),?(\\d*) @@$/;\n  while (textPointer < text.length) {\n    var m = text[textPointer].match(patchHeader);\n    if (!m) {\n      throw new Error('Invalid patch string: ' + text[textPointer]);\n    }\n    var patch = new diff_match_patch.patch_obj();\n    patches.push(patch);\n    patch.start1 = parseInt(m[1], 10);\n    if (m[2] === '') {\n      patch.start1--;\n      patch.length1 = 1;\n    } else if (m[2] == '0') {\n      patch.length1 = 0;\n    } else {\n      patch.start1--;\n      patch.length1 = parseInt(m[2], 10);\n    }\n\n    patch.start2 = parseInt(m[3], 10);\n    if (m[4] === '') {\n      patch.start2--;\n      patch.length2 = 1;\n    } else if (m[4] == '0') {\n      patch.length2 = 0;\n    } else {\n      patch.start2--;\n      patch.length2 = parseInt(m[4], 10);\n    }\n    textPointer++;\n\n    while (textPointer < text.length) {\n      var sign = text[textPointer].charAt(0);\n      try {\n        var line = decodeURI(text[textPointer].substring(1));\n      } catch (ex) {\n        // Malformed URI sequence.\n        throw new Error('Illegal escape in patch_fromText: ' + line);\n      }\n      if (sign == '-') {\n        // Deletion.\n        patch.diffs.push([DIFF_DELETE, line]);\n      } else if (sign == '+') {\n        // Insertion.\n        patch.diffs.push([DIFF_INSERT, line]);\n      } else if (sign == ' ') {\n        // Minor equality.\n        patch.diffs.push([DIFF_EQUAL, line]);\n      } else if (sign == '@') {\n        // Start of next patch.\n        break;\n      } else if (sign === '') {\n        // Blank line?  Whatever.\n      } else {\n        // WTF?\n        throw new Error('Invalid patch mode \"' + sign + '\" in: ' + line);\n      }\n      textPointer++;\n    }\n  }\n  return patches;\n};\n\n\n/**\n * Class representing one patch operation.\n * @constructor\n */\ndiff_match_patch.patch_obj = function() {\n  /** @type {!Array.<!diff_match_patch.Diff>} */\n  this.diffs = [];\n  /** @type {?number} */\n  this.start1 = null;\n  /** @type {?number} */\n  this.start2 = null;\n  /** @type {number} */\n  this.length1 = 0;\n  /** @type {number} */\n  this.length2 = 0;\n};\n\n\n/**\n * Emmulate GNU diff's format.\n * Header: @@ -382,8 +481,9 @@\n * Indicies are printed as 1-based, not 0-based.\n * @return {string} The GNU diff string.\n */\ndiff_match_patch.patch_obj.prototype.toString = function() {\n  var coords1, coords2;\n  if (this.length1 === 0) {\n    coords1 = this.start1 + ',0';\n  } else if (this.length1 == 1) {\n    coords1 = this.start1 + 1;\n  } else {\n    coords1 = (this.start1 + 1) + ',' + this.length1;\n  }\n  if (this.length2 === 0) {\n    coords2 = this.start2 + ',0';\n  } else if (this.length2 == 1) {\n    coords2 = this.start2 + 1;\n  } else {\n    coords2 = (this.start2 + 1) + ',' + this.length2;\n  }\n  var text = ['@@ -' + coords1 + ' +' + coords2 + ' @@\\n'];\n  var op;\n  // Escape the body of the patch with %xx notation.\n  for (var x = 0; x < this.diffs.length; x++) {\n    switch (this.diffs[x][0]) {\n      case DIFF_INSERT:\n        op = '+';\n        break;\n      case DIFF_DELETE:\n        op = '-';\n        break;\n      case DIFF_EQUAL:\n        op = ' ';\n        break;\n    }\n    text[x + 1] = op + encodeURI(this.diffs[x][1]) + '\\n';\n  }\n  return text.join('').replace(/%20/g, ' ');\n};\n\n\n// The following export code was added by @ForbesLindesay\nmodule.exports = diff_match_patch;\nmodule.exports['diff_match_patch'] = diff_match_patch;\nmodule.exports['DIFF_DELETE'] = DIFF_DELETE;\nmodule.exports['DIFF_INSERT'] = DIFF_INSERT;\nmodule.exports['DIFF_EQUAL'] = DIFF_EQUAL;\n});\n\n/* global diff_match_patch */\nvar TEXT_DIFF = 2;\nvar DEFAULT_MIN_LENGTH = 60;\nvar cachedDiffPatch = null;\n\nvar getDiffMatchPatch = function getDiffMatchPatch(required) {\n  /* jshint camelcase: false */\n\n  if (!cachedDiffPatch) {\n    var instance = void 0;\n    /* eslint-disable camelcase, new-cap */\n    if (typeof diff_match_patch !== 'undefined') {\n      // already loaded, probably a browser\n      instance = typeof diff_match_patch === 'function' ? new diff_match_patch() : new diff_match_patch.diff_match_patch();\n    } else if (diffMatchPatch) {\n      try {\n        instance = diffMatchPatch && new diffMatchPatch();\n      } catch (err) {\n        instance = null;\n      }\n    }\n    /* eslint-enable camelcase, new-cap */\n    if (!instance) {\n      if (!required) {\n        return null;\n      }\n      var error = new Error('text diff_match_patch library not found');\n      // eslint-disable-next-line camelcase\n      error.diff_match_patch_not_found = true;\n      throw error;\n    }\n    cachedDiffPatch = {\n      diff: function diff(txt1, txt2) {\n        return instance.patch_toText(instance.patch_make(txt1, txt2));\n      },\n      patch: function patch(txt1, _patch) {\n        var results = instance.patch_apply(instance.patch_fromText(_patch), txt1);\n        for (var i = 0; i < results[1].length; i++) {\n          if (!results[1][i]) {\n            var _error = new Error('text patch failed');\n            _error.textPatchFailed = true;\n          }\n        }\n        return results[0];\n      }\n    };\n  }\n  return cachedDiffPatch;\n};\n\nvar diffFilter$3 = function textsDiffFilter(context) {\n  if (context.leftType !== 'string') {\n    return;\n  }\n  var minLength = context.options && context.options.textDiff && context.options.textDiff.minLength || DEFAULT_MIN_LENGTH;\n  if (context.left.length < minLength || context.right.length < minLength) {\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n  // large text, try to use a text-diff algorithm\n  var diffMatchPatch$$1 = getDiffMatchPatch();\n  if (!diffMatchPatch$$1) {\n    // diff-match-patch library not available,\n    // fallback to regular string replace\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n  var diff = diffMatchPatch$$1.diff;\n  context.setResult([diff(context.left, context.right), 0, TEXT_DIFF]).exit();\n};\ndiffFilter$3.filterName = 'texts';\n\nvar patchFilter$3 = function textsPatchFilter(context) {\n  if (context.nested) {\n    return;\n  }\n  if (context.delta[2] !== TEXT_DIFF) {\n    return;\n  }\n\n  // text-diff, use a text-patch algorithm\n  var patch = getDiffMatchPatch(true).patch;\n  context.setResult(patch(context.left, context.delta[0])).exit();\n};\npatchFilter$3.filterName = 'texts';\n\nvar textDeltaReverse = function textDeltaReverse(delta) {\n  var i = void 0;\n  var l = void 0;\n  var lines = void 0;\n  var line = void 0;\n  var lineTmp = void 0;\n  var header = null;\n  var headerRegex = /^@@ +-(\\d+),(\\d+) +\\+(\\d+),(\\d+) +@@$/;\n  var lineHeader = void 0;\n  lines = delta.split('\\n');\n  for (i = 0, l = lines.length; i < l; i++) {\n    line = lines[i];\n    var lineStart = line.slice(0, 1);\n    if (lineStart === '@') {\n      header = headerRegex.exec(line);\n      lineHeader = i;\n\n      // fix header\n      lines[lineHeader] = '@@ -' + header[3] + ',' + header[4] + ' +' + header[1] + ',' + header[2] + ' @@';\n    } else if (lineStart === '+') {\n      lines[i] = '-' + lines[i].slice(1);\n      if (lines[i - 1].slice(0, 1) === '+') {\n        // swap lines to keep default order (-+)\n        lineTmp = lines[i];\n        lines[i] = lines[i - 1];\n        lines[i - 1] = lineTmp;\n      }\n    } else if (lineStart === '-') {\n      lines[i] = '+' + lines[i].slice(1);\n    }\n  }\n  return lines.join('\\n');\n};\n\nvar reverseFilter$3 = function textsReverseFilter(context) {\n  if (context.nested) {\n    return;\n  }\n  if (context.delta[2] !== TEXT_DIFF) {\n    return;\n  }\n\n  // text-diff, use a text-diff algorithm\n  context.setResult([textDeltaReverse(context.delta[0]), 0, TEXT_DIFF]).exit();\n};\nreverseFilter$3.filterName = 'texts';\n\nvar DiffPatcher = function () {\n  function DiffPatcher(options) {\n    classCallCheck(this, DiffPatcher);\n\n    this.processor = new Processor(options);\n    this.processor.pipe(new Pipe('diff').append(collectChildrenDiffFilter, diffFilter, diffFilter$2, diffFilter$3, objectsDiffFilter, diffFilter$1).shouldHaveResult());\n    this.processor.pipe(new Pipe('patch').append(collectChildrenPatchFilter, collectChildrenPatchFilter$1, patchFilter, patchFilter$3, patchFilter$1, patchFilter$2).shouldHaveResult());\n    this.processor.pipe(new Pipe('reverse').append(collectChildrenReverseFilter, collectChildrenReverseFilter$1, reverseFilter, reverseFilter$3, reverseFilter$1, reverseFilter$2).shouldHaveResult());\n  }\n\n  createClass(DiffPatcher, [{\n    key: 'options',\n    value: function options() {\n      var _processor;\n\n      return (_processor = this.processor).options.apply(_processor, arguments);\n    }\n  }, {\n    key: 'diff',\n    value: function diff(left, right) {\n      return this.processor.process(new DiffContext(left, right));\n    }\n  }, {\n    key: 'patch',\n    value: function patch(left, delta) {\n      return this.processor.process(new PatchContext(left, delta));\n    }\n  }, {\n    key: 'reverse',\n    value: function reverse(delta) {\n      return this.processor.process(new ReverseContext(delta));\n    }\n  }, {\n    key: 'unpatch',\n    value: function unpatch(right, delta) {\n      return this.patch(right, this.reverse(delta));\n    }\n  }, {\n    key: 'clone',\n    value: function clone$$1(value) {\n      return clone(value);\n    }\n  }]);\n  return DiffPatcher;\n}();\n\nvar isArray$3 = typeof Array.isArray === 'function' ? Array.isArray : function (a) {\n  return a instanceof Array;\n};\n\nvar getObjectKeys = typeof Object.keys === 'function' ? function (obj) {\n  return Object.keys(obj);\n} : function (obj) {\n  var names = [];\n  for (var property in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, property)) {\n      names.push(property);\n    }\n  }\n  return names;\n};\n\nvar trimUnderscore = function trimUnderscore(str) {\n  if (str.substr(0, 1) === '_') {\n    return str.slice(1);\n  }\n  return str;\n};\n\nvar arrayKeyToSortNumber = function arrayKeyToSortNumber(key) {\n  if (key === '_t') {\n    return -1;\n  } else {\n    if (key.substr(0, 1) === '_') {\n      return parseInt(key.slice(1), 10);\n    } else {\n      return parseInt(key, 10) + 0.1;\n    }\n  }\n};\n\nvar arrayKeyComparer = function arrayKeyComparer(key1, key2) {\n  return arrayKeyToSortNumber(key1) - arrayKeyToSortNumber(key2);\n};\n\nvar BaseFormatter = function () {\n  function BaseFormatter() {\n    classCallCheck(this, BaseFormatter);\n  }\n\n  createClass(BaseFormatter, [{\n    key: 'format',\n    value: function format(delta, left) {\n      var context = {};\n      this.prepareContext(context);\n      this.recurse(context, delta, left);\n      return this.finalize(context);\n    }\n  }, {\n    key: 'prepareContext',\n    value: function prepareContext(context) {\n      context.buffer = [];\n      context.out = function () {\n        var _buffer;\n\n        (_buffer = this.buffer).push.apply(_buffer, arguments);\n      };\n    }\n  }, {\n    key: 'typeFormattterNotFound',\n    value: function typeFormattterNotFound(context, deltaType) {\n      throw new Error('cannot format delta type: ' + deltaType);\n    }\n  }, {\n    key: 'typeFormattterErrorFormatter',\n    value: function typeFormattterErrorFormatter(context, err) {\n      return err.toString();\n    }\n  }, {\n    key: 'finalize',\n    value: function finalize(_ref) {\n      var buffer = _ref.buffer;\n\n      if (isArray$3(buffer)) {\n        return buffer.join('');\n      }\n    }\n  }, {\n    key: 'recurse',\n    value: function recurse(context, delta, left, key, leftKey, movedFrom, isLast) {\n      var useMoveOriginHere = delta && movedFrom;\n      var leftValue = useMoveOriginHere ? movedFrom.value : left;\n\n      if (typeof delta === 'undefined' && typeof key === 'undefined') {\n        return undefined;\n      }\n\n      var type = this.getDeltaType(delta, movedFrom);\n      var nodeType = type === 'node' ? delta._t === 'a' ? 'array' : 'object' : '';\n\n      if (typeof key !== 'undefined') {\n        this.nodeBegin(context, key, leftKey, type, nodeType, isLast);\n      } else {\n        this.rootBegin(context, type, nodeType);\n      }\n\n      var typeFormattter = void 0;\n      try {\n        typeFormattter = this['format_' + type] || this.typeFormattterNotFound(context, type);\n        typeFormattter.call(this, context, delta, leftValue, key, leftKey, movedFrom);\n      } catch (err) {\n        this.typeFormattterErrorFormatter(context, err, delta, leftValue, key, leftKey, movedFrom);\n        if (typeof console !== 'undefined' && console.error) {\n          console.error(err.stack);\n        }\n      }\n\n      if (typeof key !== 'undefined') {\n        this.nodeEnd(context, key, leftKey, type, nodeType, isLast);\n      } else {\n        this.rootEnd(context, type, nodeType);\n      }\n    }\n  }, {\n    key: 'formatDeltaChildren',\n    value: function formatDeltaChildren(context, delta, left) {\n      var self = this;\n      this.forEachDeltaKey(delta, left, function (key, leftKey, movedFrom, isLast) {\n        self.recurse(context, delta[key], left ? left[leftKey] : undefined, key, leftKey, movedFrom, isLast);\n      });\n    }\n  }, {\n    key: 'forEachDeltaKey',\n    value: function forEachDeltaKey(delta, left, fn) {\n      var keys = getObjectKeys(delta);\n      var arrayKeys = delta._t === 'a';\n      var moveDestinations = {};\n      var name = void 0;\n      if (typeof left !== 'undefined') {\n        for (name in left) {\n          if (Object.prototype.hasOwnProperty.call(left, name)) {\n            if (typeof delta[name] === 'undefined' && (!arrayKeys || typeof delta['_' + name] === 'undefined')) {\n              keys.push(name);\n            }\n          }\n        }\n      }\n      // look for move destinations\n      for (name in delta) {\n        if (Object.prototype.hasOwnProperty.call(delta, name)) {\n          var value = delta[name];\n          if (isArray$3(value) && value[2] === 3) {\n            moveDestinations[value[1].toString()] = {\n              key: name,\n              value: left && left[parseInt(name.substr(1))]\n            };\n            if (this.includeMoveDestinations !== false) {\n              if (typeof left === 'undefined' && typeof delta[value[1]] === 'undefined') {\n                keys.push(value[1].toString());\n              }\n            }\n          }\n        }\n      }\n      if (arrayKeys) {\n        keys.sort(arrayKeyComparer);\n      } else {\n        keys.sort();\n      }\n      for (var index = 0, length = keys.length; index < length; index++) {\n        var key = keys[index];\n        if (arrayKeys && key === '_t') {\n          continue;\n        }\n        var leftKey = arrayKeys ? typeof key === 'number' ? key : parseInt(trimUnderscore(key), 10) : key;\n        var isLast = index === length - 1;\n        fn(key, leftKey, moveDestinations[leftKey], isLast);\n      }\n    }\n  }, {\n    key: 'getDeltaType',\n    value: function getDeltaType(delta, movedFrom) {\n      if (typeof delta === 'undefined') {\n        if (typeof movedFrom !== 'undefined') {\n          return 'movedestination';\n        }\n        return 'unchanged';\n      }\n      if (isArray$3(delta)) {\n        if (delta.length === 1) {\n          return 'added';\n        }\n        if (delta.length === 2) {\n          return 'modified';\n        }\n        if (delta.length === 3 && delta[2] === 0) {\n          return 'deleted';\n        }\n        if (delta.length === 3 && delta[2] === 2) {\n          return 'textdiff';\n        }\n        if (delta.length === 3 && delta[2] === 3) {\n          return 'moved';\n        }\n      } else if ((typeof delta === 'undefined' ? 'undefined' : _typeof(delta)) === 'object') {\n        return 'node';\n      }\n      return 'unknown';\n    }\n  }, {\n    key: 'parseTextDiff',\n    value: function parseTextDiff(value) {\n      var output = [];\n      var lines = value.split('\\n@@ ');\n      for (var i = 0, l = lines.length; i < l; i++) {\n        var line = lines[i];\n        var lineOutput = {\n          pieces: []\n        };\n        var location = /^(?:@@ )?[-+]?(\\d+),(\\d+)/.exec(line).slice(1);\n        lineOutput.location = {\n          line: location[0],\n          chr: location[1]\n        };\n        var pieces = line.split('\\n').slice(1);\n        for (var pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {\n          var piece = pieces[pieceIndex];\n          if (!piece.length) {\n            continue;\n          }\n          var pieceOutput = {\n            type: 'context'\n          };\n          if (piece.substr(0, 1) === '+') {\n            pieceOutput.type = 'added';\n          } else if (piece.substr(0, 1) === '-') {\n            pieceOutput.type = 'deleted';\n          }\n          pieceOutput.text = piece.slice(1);\n          lineOutput.pieces.push(pieceOutput);\n        }\n        output.push(lineOutput);\n      }\n      return output;\n    }\n  }]);\n  return BaseFormatter;\n}();\n\n\n\nvar base = Object.freeze({\n\tdefault: BaseFormatter\n});\n\nvar HtmlFormatter = function (_BaseFormatter) {\n  inherits(HtmlFormatter, _BaseFormatter);\n\n  function HtmlFormatter() {\n    classCallCheck(this, HtmlFormatter);\n    return possibleConstructorReturn(this, (HtmlFormatter.__proto__ || Object.getPrototypeOf(HtmlFormatter)).apply(this, arguments));\n  }\n\n  createClass(HtmlFormatter, [{\n    key: 'typeFormattterErrorFormatter',\n    value: function typeFormattterErrorFormatter(context, err) {\n      context.out('<pre class=\"jsondiffpatch-error\">' + err + '</pre>');\n    }\n  }, {\n    key: 'formatValue',\n    value: function formatValue(context, value) {\n      context.out('<pre>' + htmlEscape(JSON.stringify(value, null, 2)) + '</pre>');\n    }\n  }, {\n    key: 'formatTextDiffString',\n    value: function formatTextDiffString(context, value) {\n      var lines = this.parseTextDiff(value);\n      context.out('<ul class=\"jsondiffpatch-textdiff\">');\n      for (var i = 0, l = lines.length; i < l; i++) {\n        var line = lines[i];\n        context.out('<li><div class=\"jsondiffpatch-textdiff-location\">' + ('<span class=\"jsondiffpatch-textdiff-line-number\">' + line.location.line + '</span><span class=\"jsondiffpatch-textdiff-char\">' + line.location.chr + '</span></div><div class=\"jsondiffpatch-textdiff-line\">'));\n        var pieces = line.pieces;\n        for (var pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {\n          /* global decodeURI */\n          var piece = pieces[pieceIndex];\n          context.out('<span class=\"jsondiffpatch-textdiff-' + piece.type + '\">' + htmlEscape(decodeURI(piece.text)) + '</span>');\n        }\n        context.out('</div></li>');\n      }\n      context.out('</ul>');\n    }\n  }, {\n    key: 'rootBegin',\n    value: function rootBegin(context, type, nodeType) {\n      var nodeClass = 'jsondiffpatch-' + type + (nodeType ? ' jsondiffpatch-child-node-type-' + nodeType : '');\n      context.out('<div class=\"jsondiffpatch-delta ' + nodeClass + '\">');\n    }\n  }, {\n    key: 'rootEnd',\n    value: function rootEnd(context) {\n      context.out('</div>' + (context.hasArrows ? '<script type=\"text/javascript\">setTimeout(' + (adjustArrows.toString() + ',10);</script>') : ''));\n    }\n  }, {\n    key: 'nodeBegin',\n    value: function nodeBegin(context, key, leftKey, type, nodeType) {\n      var nodeClass = 'jsondiffpatch-' + type + (nodeType ? ' jsondiffpatch-child-node-type-' + nodeType : '');\n      context.out('<li class=\"' + nodeClass + '\" data-key=\"' + leftKey + '\">' + ('<div class=\"jsondiffpatch-property-name\">' + leftKey + '</div>'));\n    }\n  }, {\n    key: 'nodeEnd',\n    value: function nodeEnd(context) {\n      context.out('</li>');\n    }\n\n    /* jshint camelcase: false */\n    /* eslint-disable camelcase */\n\n  }, {\n    key: 'format_unchanged',\n    value: function format_unchanged(context, delta, left) {\n      if (typeof left === 'undefined') {\n        return;\n      }\n      context.out('<div class=\"jsondiffpatch-value\">');\n      this.formatValue(context, left);\n      context.out('</div>');\n    }\n  }, {\n    key: 'format_movedestination',\n    value: function format_movedestination(context, delta, left) {\n      if (typeof left === 'undefined') {\n        return;\n      }\n      context.out('<div class=\"jsondiffpatch-value\">');\n      this.formatValue(context, left);\n      context.out('</div>');\n    }\n  }, {\n    key: 'format_node',\n    value: function format_node(context, delta, left) {\n      // recurse\n      var nodeType = delta._t === 'a' ? 'array' : 'object';\n      context.out('<ul class=\"jsondiffpatch-node jsondiffpatch-node-type-' + nodeType + '\">');\n      this.formatDeltaChildren(context, delta, left);\n      context.out('</ul>');\n    }\n  }, {\n    key: 'format_added',\n    value: function format_added(context, delta) {\n      context.out('<div class=\"jsondiffpatch-value\">');\n      this.formatValue(context, delta[0]);\n      context.out('</div>');\n    }\n  }, {\n    key: 'format_modified',\n    value: function format_modified(context, delta) {\n      context.out('<div class=\"jsondiffpatch-value jsondiffpatch-left-value\">');\n      this.formatValue(context, delta[0]);\n      context.out('</div>' + '<div class=\"jsondiffpatch-value jsondiffpatch-right-value\">');\n      this.formatValue(context, delta[1]);\n      context.out('</div>');\n    }\n  }, {\n    key: 'format_deleted',\n    value: function format_deleted(context, delta) {\n      context.out('<div class=\"jsondiffpatch-value\">');\n      this.formatValue(context, delta[0]);\n      context.out('</div>');\n    }\n  }, {\n    key: 'format_moved',\n    value: function format_moved(context, delta) {\n      context.out('<div class=\"jsondiffpatch-value\">');\n      this.formatValue(context, delta[0]);\n      context.out('</div><div class=\"jsondiffpatch-moved-destination\">' + delta[1] + '</div>');\n\n      // draw an SVG arrow from here to move destination\n      context.out(\n      /* jshint multistr: true */\n      '<div class=\"jsondiffpatch-arrow\" ' + 'style=\"position: relative; left: -34px;\">\\n          <svg width=\"30\" height=\"60\" ' + 'style=\"position: absolute; display: none;\">\\n          <defs>\\n              <marker id=\"markerArrow\" markerWidth=\"8\" markerHeight=\"8\"\\n                 refx=\"2\" refy=\"4\"\\n                     orient=\"auto\" markerUnits=\"userSpaceOnUse\">\\n                  <path d=\"M1,1 L1,7 L7,4 L1,1\" style=\"fill: #339;\" />\\n              </marker>\\n          </defs>\\n          <path d=\"M30,0 Q-10,25 26,50\"\\n            style=\"stroke: #88f; stroke-width: 2px; fill: none; ' + 'stroke-opacity: 0.5; marker-end: url(#markerArrow);\"\\n          ></path>\\n          </svg>\\n      </div>');\n      context.hasArrows = true;\n    }\n  }, {\n    key: 'format_textdiff',\n    value: function format_textdiff(context, delta) {\n      context.out('<div class=\"jsondiffpatch-value\">');\n      this.formatTextDiffString(context, delta[0]);\n      context.out('</div>');\n    }\n  }]);\n  return HtmlFormatter;\n}(BaseFormatter);\n\nfunction htmlEscape(text) {\n  var html = text;\n  var replacements = [[/&/g, '&amp;'], [/</g, '&lt;'], [/>/g, '&gt;'], [/'/g, '&apos;'], [/\"/g, '&quot;']];\n  for (var i = 0; i < replacements.length; i++) {\n    html = html.replace(replacements[i][0], replacements[i][1]);\n  }\n  return html;\n}\n\nvar adjustArrows = function jsondiffpatchHtmlFormatterAdjustArrows(nodeArg) {\n  var node = nodeArg || document;\n  var getElementText = function getElementText(_ref) {\n    var textContent = _ref.textContent,\n        innerText = _ref.innerText;\n    return textContent || innerText;\n  };\n  var eachByQuery = function eachByQuery(el, query, fn) {\n    var elems = el.querySelectorAll(query);\n    for (var i = 0, l = elems.length; i < l; i++) {\n      fn(elems[i]);\n    }\n  };\n  var eachChildren = function eachChildren(_ref2, fn) {\n    var children = _ref2.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      fn(children[i], i);\n    }\n  };\n  eachByQuery(node, '.jsondiffpatch-arrow', function (_ref3) {\n    var parentNode = _ref3.parentNode,\n        children = _ref3.children,\n        style = _ref3.style;\n\n    var arrowParent = parentNode;\n    var svg = children[0];\n    var path = svg.children[1];\n    svg.style.display = 'none';\n    var destination = getElementText(arrowParent.querySelector('.jsondiffpatch-moved-destination'));\n    var container = arrowParent.parentNode;\n    var destinationElem = void 0;\n    eachChildren(container, function (child) {\n      if (child.getAttribute('data-key') === destination) {\n        destinationElem = child;\n      }\n    });\n    if (!destinationElem) {\n      return;\n    }\n    try {\n      var distance = destinationElem.offsetTop - arrowParent.offsetTop;\n      svg.setAttribute('height', Math.abs(distance) + 6);\n      style.top = -8 + (distance > 0 ? 0 : distance) + 'px';\n      var curve = distance > 0 ? 'M30,0 Q-10,' + Math.round(distance / 2) + ' 26,' + (distance - 4) : 'M30,' + -distance + ' Q-10,' + Math.round(-distance / 2) + ' 26,4';\n      path.setAttribute('d', curve);\n      svg.style.display = '';\n    } catch (err) {}\n  });\n};\n\n/* jshint camelcase: true */\n/* eslint-enable camelcase */\n\nvar showUnchanged = function showUnchanged(show, node, delay) {\n  var el = node || document.body;\n  var prefix = 'jsondiffpatch-unchanged-';\n  var classes = {\n    showing: prefix + 'showing',\n    hiding: prefix + 'hiding',\n    visible: prefix + 'visible',\n    hidden: prefix + 'hidden'\n  };\n  var list = el.classList;\n  if (!list) {\n    return;\n  }\n  if (!delay) {\n    list.remove(classes.showing);\n    list.remove(classes.hiding);\n    list.remove(classes.visible);\n    list.remove(classes.hidden);\n    if (show === false) {\n      list.add(classes.hidden);\n    }\n    return;\n  }\n  if (show === false) {\n    list.remove(classes.showing);\n    list.add(classes.visible);\n    setTimeout(function () {\n      list.add(classes.hiding);\n    }, 10);\n  } else {\n    list.remove(classes.hiding);\n    list.add(classes.showing);\n    list.remove(classes.hidden);\n  }\n  var intervalId = setInterval(function () {\n    adjustArrows(el);\n  }, 100);\n  setTimeout(function () {\n    list.remove(classes.showing);\n    list.remove(classes.hiding);\n    if (show === false) {\n      list.add(classes.hidden);\n      list.remove(classes.visible);\n    } else {\n      list.add(classes.visible);\n      list.remove(classes.hidden);\n    }\n    setTimeout(function () {\n      list.remove(classes.visible);\n      clearInterval(intervalId);\n    }, delay + 400);\n  }, delay);\n};\n\nvar hideUnchanged = function hideUnchanged(node, delay) {\n  return showUnchanged(false, node, delay);\n};\n\nvar defaultInstance = void 0;\n\nfunction format(delta, left) {\n  if (!defaultInstance) {\n    defaultInstance = new HtmlFormatter();\n  }\n  return defaultInstance.format(delta, left);\n}\n\n\n\nvar html = Object.freeze({\n\tshowUnchanged: showUnchanged,\n\thideUnchanged: hideUnchanged,\n\tdefault: HtmlFormatter,\n\tformat: format\n});\n\nvar AnnotatedFormatter = function (_BaseFormatter) {\n  inherits(AnnotatedFormatter, _BaseFormatter);\n\n  function AnnotatedFormatter() {\n    classCallCheck(this, AnnotatedFormatter);\n\n    var _this = possibleConstructorReturn(this, (AnnotatedFormatter.__proto__ || Object.getPrototypeOf(AnnotatedFormatter)).call(this));\n\n    _this.includeMoveDestinations = false;\n    return _this;\n  }\n\n  createClass(AnnotatedFormatter, [{\n    key: 'prepareContext',\n    value: function prepareContext(context) {\n      get(AnnotatedFormatter.prototype.__proto__ || Object.getPrototypeOf(AnnotatedFormatter.prototype), 'prepareContext', this).call(this, context);\n      context.indent = function (levels) {\n        this.indentLevel = (this.indentLevel || 0) + (typeof levels === 'undefined' ? 1 : levels);\n        this.indentPad = new Array(this.indentLevel + 1).join('&nbsp;&nbsp;');\n      };\n      context.row = function (json, htmlNote) {\n        context.out('<tr><td style=\"white-space: nowrap;\">' + '<pre class=\"jsondiffpatch-annotated-indent\"' + ' style=\"display: inline-block\">');\n        context.out(context.indentPad);\n        context.out('</pre><pre style=\"display: inline-block\">');\n        context.out(json);\n        context.out('</pre></td><td class=\"jsondiffpatch-delta-note\"><div>');\n        context.out(htmlNote);\n        context.out('</div></td></tr>');\n      };\n    }\n  }, {\n    key: 'typeFormattterErrorFormatter',\n    value: function typeFormattterErrorFormatter(context, err) {\n      context.row('', '<pre class=\"jsondiffpatch-error\">' + err + '</pre>');\n    }\n  }, {\n    key: 'formatTextDiffString',\n    value: function formatTextDiffString(context, value) {\n      var lines = this.parseTextDiff(value);\n      context.out('<ul class=\"jsondiffpatch-textdiff\">');\n      for (var i = 0, l = lines.length; i < l; i++) {\n        var line = lines[i];\n        context.out('<li><div class=\"jsondiffpatch-textdiff-location\">' + ('<span class=\"jsondiffpatch-textdiff-line-number\">' + line.location.line + '</span><span class=\"jsondiffpatch-textdiff-char\">' + line.location.chr + '</span></div><div class=\"jsondiffpatch-textdiff-line\">'));\n        var pieces = line.pieces;\n        for (var pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {\n          var piece = pieces[pieceIndex];\n          context.out('<span class=\"jsondiffpatch-textdiff-' + piece.type + '\">' + piece.text + '</span>');\n        }\n        context.out('</div></li>');\n      }\n      context.out('</ul>');\n    }\n  }, {\n    key: 'rootBegin',\n    value: function rootBegin(context, type, nodeType) {\n      context.out('<table class=\"jsondiffpatch-annotated-delta\">');\n      if (type === 'node') {\n        context.row('{');\n        context.indent();\n      }\n      if (nodeType === 'array') {\n        context.row('\"_t\": \"a\",', 'Array delta (member names indicate array indices)');\n      }\n    }\n  }, {\n    key: 'rootEnd',\n    value: function rootEnd(context, type) {\n      if (type === 'node') {\n        context.indent(-1);\n        context.row('}');\n      }\n      context.out('</table>');\n    }\n  }, {\n    key: 'nodeBegin',\n    value: function nodeBegin(context, key, leftKey, type, nodeType) {\n      context.row('&quot;' + key + '&quot;: {');\n      if (type === 'node') {\n        context.indent();\n      }\n      if (nodeType === 'array') {\n        context.row('\"_t\": \"a\",', 'Array delta (member names indicate array indices)');\n      }\n    }\n  }, {\n    key: 'nodeEnd',\n    value: function nodeEnd(context, key, leftKey, type, nodeType, isLast) {\n      if (type === 'node') {\n        context.indent(-1);\n      }\n      context.row('}' + (isLast ? '' : ','));\n    }\n\n    /* jshint camelcase: false */\n\n    /* eslint-disable camelcase */\n\n  }, {\n    key: 'format_unchanged',\n    value: function format_unchanged() {}\n  }, {\n    key: 'format_movedestination',\n    value: function format_movedestination() {}\n  }, {\n    key: 'format_node',\n    value: function format_node(context, delta, left) {\n      // recurse\n      this.formatDeltaChildren(context, delta, left);\n    }\n  }]);\n  return AnnotatedFormatter;\n}(BaseFormatter);\n\n/* eslint-enable camelcase */\n\nvar wrapPropertyName = function wrapPropertyName(name) {\n  return '<pre style=\"display:inline-block\">&quot;' + name + '&quot;</pre>';\n};\n\nvar deltaAnnotations = {\n  added: function added(delta, left, key, leftKey) {\n    var formatLegend = ' <pre>([newValue])</pre>';\n    if (typeof leftKey === 'undefined') {\n      return 'new value' + formatLegend;\n    }\n    if (typeof leftKey === 'number') {\n      return 'insert at index ' + leftKey + formatLegend;\n    }\n    return 'add property ' + wrapPropertyName(leftKey) + formatLegend;\n  },\n  modified: function modified(delta, left, key, leftKey) {\n    var formatLegend = ' <pre>([previousValue, newValue])</pre>';\n    if (typeof leftKey === 'undefined') {\n      return 'modify value' + formatLegend;\n    }\n    if (typeof leftKey === 'number') {\n      return 'modify at index ' + leftKey + formatLegend;\n    }\n    return 'modify property ' + wrapPropertyName(leftKey) + formatLegend;\n  },\n  deleted: function deleted(delta, left, key, leftKey) {\n    var formatLegend = ' <pre>([previousValue, 0, 0])</pre>';\n    if (typeof leftKey === 'undefined') {\n      return 'delete value' + formatLegend;\n    }\n    if (typeof leftKey === 'number') {\n      return 'remove index ' + leftKey + formatLegend;\n    }\n    return 'delete property ' + wrapPropertyName(leftKey) + formatLegend;\n  },\n  moved: function moved(delta, left, key, leftKey) {\n    return 'move from <span title=\"(position to remove at original state)\">' + ('index ' + leftKey + '</span> to <span title=\"(position to insert at final') + (' state)\">index ' + delta[1] + '</span>');\n  },\n  textdiff: function textdiff(delta, left, key, leftKey) {\n    var location = typeof leftKey === 'undefined' ? '' : typeof leftKey === 'number' ? ' at index ' + leftKey : ' at property ' + wrapPropertyName(leftKey);\n    return 'text diff' + location + ', format is <a href=\"https://code.google.com/' + 'p/google-diff-match-patch/wiki/Unidiff\">a variation of Unidiff</a>';\n  }\n};\n\nvar formatAnyChange = function formatAnyChange(context, delta) {\n  var deltaType = this.getDeltaType(delta);\n  var annotator = deltaAnnotations[deltaType];\n  var htmlNote = annotator && annotator.apply(annotator, Array.prototype.slice.call(arguments, 1));\n  var json = JSON.stringify(delta, null, 2);\n  if (deltaType === 'textdiff') {\n    // split text diffs lines\n    json = json.split('\\\\n').join('\\\\n\"+\\n   \"');\n  }\n  context.indent();\n  context.row(json, htmlNote);\n  context.indent(-1);\n};\n\n/* eslint-disable camelcase */\nAnnotatedFormatter.prototype.format_added = formatAnyChange;\nAnnotatedFormatter.prototype.format_modified = formatAnyChange;\nAnnotatedFormatter.prototype.format_deleted = formatAnyChange;\nAnnotatedFormatter.prototype.format_moved = formatAnyChange;\nAnnotatedFormatter.prototype.format_textdiff = formatAnyChange;\nvar defaultInstance$1 = void 0;\n\nfunction format$1(delta, left) {\n  if (!defaultInstance$1) {\n    defaultInstance$1 = new AnnotatedFormatter();\n  }\n  return defaultInstance$1.format(delta, left);\n}\n\n\n\nvar annotated = Object.freeze({\n\tdefault: AnnotatedFormatter,\n\tformat: format$1\n});\n\nvar OPERATIONS = {\n  add: 'add',\n  remove: 'remove',\n  replace: 'replace',\n  move: 'move'\n};\n\nvar JSONFormatter = function (_BaseFormatter) {\n  inherits(JSONFormatter, _BaseFormatter);\n\n  function JSONFormatter() {\n    classCallCheck(this, JSONFormatter);\n\n    var _this = possibleConstructorReturn(this, (JSONFormatter.__proto__ || Object.getPrototypeOf(JSONFormatter)).call(this));\n\n    _this.includeMoveDestinations = true;\n    return _this;\n  }\n\n  createClass(JSONFormatter, [{\n    key: 'prepareContext',\n    value: function prepareContext(context) {\n      get(JSONFormatter.prototype.__proto__ || Object.getPrototypeOf(JSONFormatter.prototype), 'prepareContext', this).call(this, context);\n      context.result = [];\n      context.path = [];\n      context.pushCurrentOp = function (obj) {\n        var op = obj.op,\n            value = obj.value;\n\n        var val = {\n          op: op,\n          path: this.currentPath()\n        };\n        if (typeof value !== 'undefined') {\n          val.value = value;\n        }\n        this.result.push(val);\n      };\n\n      context.pushMoveOp = function (to) {\n        var from = this.currentPath();\n        this.result.push({\n          op: OPERATIONS.move,\n          from: from,\n          path: this.toPath(to)\n        });\n      };\n\n      context.currentPath = function () {\n        return '/' + this.path.join('/');\n      };\n\n      context.toPath = function (toPath) {\n        var to = this.path.slice();\n        to[to.length - 1] = toPath;\n        return '/' + to.join('/');\n      };\n    }\n  }, {\n    key: 'typeFormattterErrorFormatter',\n    value: function typeFormattterErrorFormatter(context, err) {\n      context.out('[ERROR] ' + err);\n    }\n  }, {\n    key: 'rootBegin',\n    value: function rootBegin() {}\n  }, {\n    key: 'rootEnd',\n    value: function rootEnd() {}\n  }, {\n    key: 'nodeBegin',\n    value: function nodeBegin(_ref, key, leftKey) {\n      var path = _ref.path;\n\n      path.push(leftKey);\n    }\n  }, {\n    key: 'nodeEnd',\n    value: function nodeEnd(_ref2) {\n      var path = _ref2.path;\n\n      path.pop();\n    }\n\n    /* jshint camelcase: false */\n    /* eslint-disable camelcase */\n\n  }, {\n    key: 'format_unchanged',\n    value: function format_unchanged() {}\n  }, {\n    key: 'format_movedestination',\n    value: function format_movedestination() {}\n  }, {\n    key: 'format_node',\n    value: function format_node(context, delta, left) {\n      this.formatDeltaChildren(context, delta, left);\n    }\n  }, {\n    key: 'format_added',\n    value: function format_added(context, delta) {\n      context.pushCurrentOp({ op: OPERATIONS.add, value: delta[0] });\n    }\n  }, {\n    key: 'format_modified',\n    value: function format_modified(context, delta) {\n      context.pushCurrentOp({ op: OPERATIONS.replace, value: delta[1] });\n    }\n  }, {\n    key: 'format_deleted',\n    value: function format_deleted(context) {\n      context.pushCurrentOp({ op: OPERATIONS.remove });\n    }\n  }, {\n    key: 'format_moved',\n    value: function format_moved(context, delta) {\n      var to = delta[1];\n      context.pushMoveOp(to);\n    }\n  }, {\n    key: 'format_textdiff',\n    value: function format_textdiff() {\n      throw new Error('Not implemented');\n    }\n  }, {\n    key: 'format',\n    value: function format(delta, left) {\n      var context = {};\n      this.prepareContext(context);\n      this.recurse(context, delta, left);\n      return context.result;\n    }\n  }]);\n  return JSONFormatter;\n}(BaseFormatter);\n\nvar last = function last(arr) {\n  return arr[arr.length - 1];\n};\n\nvar sortBy = function sortBy(arr, pred) {\n  arr.sort(pred);\n  return arr;\n};\n\nvar compareByIndexDesc = function compareByIndexDesc(indexA, indexB) {\n  var lastA = parseInt(indexA, 10);\n  var lastB = parseInt(indexB, 10);\n  if (!(isNaN(lastA) || isNaN(lastB))) {\n    return lastB - lastA;\n  } else {\n    return 0;\n  }\n};\n\nvar opsByDescendingOrder = function opsByDescendingOrder(removeOps) {\n  return sortBy(removeOps, function (a, b) {\n    var splitA = a.path.split('/');\n    var splitB = b.path.split('/');\n    if (splitA.length !== splitB.length) {\n      return splitA.length - splitB.length;\n    } else {\n      return compareByIndexDesc(last(splitA), last(splitB));\n    }\n  });\n};\n\nvar partitionOps = function partitionOps(arr, fns) {\n  var initArr = Array(fns.length + 1).fill().map(function () {\n    return [];\n  });\n  return arr.map(function (item) {\n    var position = fns.map(function (fn) {\n      return fn(item);\n    }).indexOf(true);\n    if (position < 0) {\n      position = fns.length;\n    }\n    return { item: item, position: position };\n  }).reduce(function (acc, item) {\n    acc[item.position].push(item.item);\n    return acc;\n  }, initArr);\n};\nvar isMoveOp = function isMoveOp(_ref3) {\n  var op = _ref3.op;\n  return op === 'move';\n};\nvar isRemoveOp = function isRemoveOp(_ref4) {\n  var op = _ref4.op;\n  return op === 'remove';\n};\n\nvar reorderOps = function reorderOps(diff) {\n  var _partitionOps = partitionOps(diff, [isMoveOp, isRemoveOp]),\n      _partitionOps2 = slicedToArray(_partitionOps, 3),\n      moveOps = _partitionOps2[0],\n      removedOps = _partitionOps2[1],\n      restOps = _partitionOps2[2];\n\n  var removeOpsReverse = opsByDescendingOrder(removedOps);\n  return [].concat(toConsumableArray(removeOpsReverse), toConsumableArray(moveOps), toConsumableArray(restOps));\n};\n\nvar defaultInstance$2 = void 0;\n\nvar format$2 = function format(delta, left) {\n  if (!defaultInstance$2) {\n    defaultInstance$2 = new JSONFormatter();\n  }\n  return reorderOps(defaultInstance$2.format(delta, left));\n};\n\nvar log = function log(delta, left) {\n  console.log(format$2(delta, left));\n};\n\n\n\nvar jsonpatch = Object.freeze({\n\tdefault: JSONFormatter,\n\tpartitionOps: partitionOps,\n\tformat: format$2,\n\tlog: log\n});\n\nfunction chalkColor(name) {\n  return chalk && chalk[name] || function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return args;\n  };\n}\n\nvar colors = {\n  added: chalkColor('green'),\n  deleted: chalkColor('red'),\n  movedestination: chalkColor('gray'),\n  moved: chalkColor('yellow'),\n  unchanged: chalkColor('gray'),\n  error: chalkColor('white.bgRed'),\n  textDiffLine: chalkColor('gray')\n};\n\nvar ConsoleFormatter = function (_BaseFormatter) {\n  inherits(ConsoleFormatter, _BaseFormatter);\n\n  function ConsoleFormatter() {\n    classCallCheck(this, ConsoleFormatter);\n\n    var _this = possibleConstructorReturn(this, (ConsoleFormatter.__proto__ || Object.getPrototypeOf(ConsoleFormatter)).call(this));\n\n    _this.includeMoveDestinations = false;\n    return _this;\n  }\n\n  createClass(ConsoleFormatter, [{\n    key: 'prepareContext',\n    value: function prepareContext(context) {\n      get(ConsoleFormatter.prototype.__proto__ || Object.getPrototypeOf(ConsoleFormatter.prototype), 'prepareContext', this).call(this, context);\n      context.indent = function (levels) {\n        this.indentLevel = (this.indentLevel || 0) + (typeof levels === 'undefined' ? 1 : levels);\n        this.indentPad = new Array(this.indentLevel + 1).join('  ');\n        this.outLine();\n      };\n      context.outLine = function () {\n        this.buffer.push('\\n' + (this.indentPad || ''));\n      };\n      context.out = function () {\n        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        for (var i = 0, l = args.length; i < l; i++) {\n          var lines = args[i].split('\\n');\n          var text = lines.join('\\n' + (this.indentPad || ''));\n          if (this.color && this.color[0]) {\n            text = this.color[0](text);\n          }\n          this.buffer.push(text);\n        }\n      };\n      context.pushColor = function (color) {\n        this.color = this.color || [];\n        this.color.unshift(color);\n      };\n      context.popColor = function () {\n        this.color = this.color || [];\n        this.color.shift();\n      };\n    }\n  }, {\n    key: 'typeFormattterErrorFormatter',\n    value: function typeFormattterErrorFormatter(context, err) {\n      context.pushColor(colors.error);\n      context.out('[ERROR]' + err);\n      context.popColor();\n    }\n  }, {\n    key: 'formatValue',\n    value: function formatValue(context, value) {\n      context.out(JSON.stringify(value, null, 2));\n    }\n  }, {\n    key: 'formatTextDiffString',\n    value: function formatTextDiffString(context, value) {\n      var lines = this.parseTextDiff(value);\n      context.indent();\n      for (var i = 0, l = lines.length; i < l; i++) {\n        var line = lines[i];\n        context.pushColor(colors.textDiffLine);\n        context.out(line.location.line + ',' + line.location.chr + ' ');\n        context.popColor();\n        var pieces = line.pieces;\n        for (var pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {\n          var piece = pieces[pieceIndex];\n          context.pushColor(colors[piece.type]);\n          context.out(piece.text);\n          context.popColor();\n        }\n        if (i < l - 1) {\n          context.outLine();\n        }\n      }\n      context.indent(-1);\n    }\n  }, {\n    key: 'rootBegin',\n    value: function rootBegin(context, type, nodeType) {\n      context.pushColor(colors[type]);\n      if (type === 'node') {\n        context.out(nodeType === 'array' ? '[' : '{');\n        context.indent();\n      }\n    }\n  }, {\n    key: 'rootEnd',\n    value: function rootEnd(context, type, nodeType) {\n      if (type === 'node') {\n        context.indent(-1);\n        context.out(nodeType === 'array' ? ']' : '}');\n      }\n      context.popColor();\n    }\n  }, {\n    key: 'nodeBegin',\n    value: function nodeBegin(context, key, leftKey, type, nodeType) {\n      context.pushColor(colors[type]);\n      context.out(leftKey + ': ');\n      if (type === 'node') {\n        context.out(nodeType === 'array' ? '[' : '{');\n        context.indent();\n      }\n    }\n  }, {\n    key: 'nodeEnd',\n    value: function nodeEnd(context, key, leftKey, type, nodeType, isLast) {\n      if (type === 'node') {\n        context.indent(-1);\n        context.out(nodeType === 'array' ? ']' : '}' + (isLast ? '' : ','));\n      }\n      if (!isLast) {\n        context.outLine();\n      }\n      context.popColor();\n    }\n\n    /* jshint camelcase: false */\n    /* eslint-disable camelcase */\n\n  }, {\n    key: 'format_unchanged',\n    value: function format_unchanged(context, delta, left) {\n      if (typeof left === 'undefined') {\n        return;\n      }\n      this.formatValue(context, left);\n    }\n  }, {\n    key: 'format_movedestination',\n    value: function format_movedestination(context, delta, left) {\n      if (typeof left === 'undefined') {\n        return;\n      }\n      this.formatValue(context, left);\n    }\n  }, {\n    key: 'format_node',\n    value: function format_node(context, delta, left) {\n      // recurse\n      this.formatDeltaChildren(context, delta, left);\n    }\n  }, {\n    key: 'format_added',\n    value: function format_added(context, delta) {\n      this.formatValue(context, delta[0]);\n    }\n  }, {\n    key: 'format_modified',\n    value: function format_modified(context, delta) {\n      context.pushColor(colors.deleted);\n      this.formatValue(context, delta[0]);\n      context.popColor();\n      context.out(' => ');\n      context.pushColor(colors.added);\n      this.formatValue(context, delta[1]);\n      context.popColor();\n    }\n  }, {\n    key: 'format_deleted',\n    value: function format_deleted(context, delta) {\n      this.formatValue(context, delta[0]);\n    }\n  }, {\n    key: 'format_moved',\n    value: function format_moved(context, delta) {\n      context.out('==> ' + delta[1]);\n    }\n  }, {\n    key: 'format_textdiff',\n    value: function format_textdiff(context, delta) {\n      this.formatTextDiffString(context, delta[0]);\n    }\n  }]);\n  return ConsoleFormatter;\n}(BaseFormatter);\n\nvar defaultInstance$3 = void 0;\n\nvar format$3 = function format(delta, left) {\n  if (!defaultInstance$3) {\n    defaultInstance$3 = new ConsoleFormatter();\n  }\n  return defaultInstance$3.format(delta, left);\n};\n\nfunction log$1(delta, left) {\n  console.log(format$3(delta, left));\n}\n\n\n\nvar console$1 = Object.freeze({\n\tdefault: ConsoleFormatter,\n\tformat: format$3,\n\tlog: log$1\n});\n\n\n\nvar index = Object.freeze({\n\tbase: base,\n\thtml: html,\n\tannotated: annotated,\n\tjsonpatch: jsonpatch,\n\tconsole: console$1\n});\n\n// use as 2nd parameter for JSON.parse to revive Date instances\nfunction dateReviver(key, value) {\n  var parts = void 0;\n  if (typeof value === 'string') {\n    // eslint-disable-next-line max-len\n    parts = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d*))?(Z|([+-])(\\d{2}):(\\d{2}))$/.exec(value);\n    if (parts) {\n      return new Date(Date.UTC(+parts[1], +parts[2] - 1, +parts[3], +parts[4], +parts[5], +parts[6], +(parts[7] || 0)));\n    }\n  }\n  return value;\n}\n\nfunction create(options) {\n  return new DiffPatcher(options);\n}\n\nvar defaultInstance$4 = void 0;\n\nfunction diff() {\n  if (!defaultInstance$4) {\n    defaultInstance$4 = new DiffPatcher();\n  }\n  return defaultInstance$4.diff.apply(defaultInstance$4, arguments);\n}\n\nfunction patch() {\n  if (!defaultInstance$4) {\n    defaultInstance$4 = new DiffPatcher();\n  }\n  return defaultInstance$4.patch.apply(defaultInstance$4, arguments);\n}\n\nfunction unpatch() {\n  if (!defaultInstance$4) {\n    defaultInstance$4 = new DiffPatcher();\n  }\n  return defaultInstance$4.unpatch.apply(defaultInstance$4, arguments);\n}\n\nfunction reverse() {\n  if (!defaultInstance$4) {\n    defaultInstance$4 = new DiffPatcher();\n  }\n  return defaultInstance$4.reverse.apply(defaultInstance$4, arguments);\n}\n\nfunction clone$1() {\n  if (!defaultInstance$4) {\n    defaultInstance$4 = new DiffPatcher();\n  }\n  return defaultInstance$4.clone.apply(defaultInstance$4, arguments);\n}\n\nexports.DiffPatcher = DiffPatcher;\nexports.formatters = index;\nexports.console = console$1;\nexports.create = create;\nexports.dateReviver = dateReviver;\nexports.diff = diff;\nexports.patch = patch;\nexports.unpatch = unpatch;\nexports.reverse = reverse;\nexports.clone = clone$1;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","import { DiffPatcher } from \"jsondiffpatch\";\nimport { IdleScheduler } from \"./idle-scheduler\";\n\nexport class JsonDiffMain {\n  diffPatcher = new DiffPatcher({\n    arrays: { detectMove: false },\n    textDiff: { minLength: 1 },\n  });\n\n  scheduler = new IdleScheduler();\n\n  async diff(input) {\n    await this.scheduler.request();\n\n    return {\n      id: input.id,\n      delta: this.diffPatcher.diff(input.a, input.b),\n    };\n  }\n}\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}