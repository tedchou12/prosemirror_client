{"code":"webpackHotUpdate(\"licit\",{\"./src/ui/mathquill-editor/MathQuillEditorSymbols.js\":function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ABSOLUTE\\\", function() { return ABSOLUTE; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ANGLE\\\", function() { return ANGLE; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"APPROX\\\", function() { return APPROX; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ARCCOS\\\", function() { return ARCCOS; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ARCSIN\\\", function() { return ARCSIN; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ARCTAN\\\", function() { return ARCTAN; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ARROWLL\\\", function() { return ARROWLL; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ARROWRL\\\", function() { return ARROWRL; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ARROWLLR\\\", function() { return ARROWLLR; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"BRACKETS\\\", function() { return BRACKETS; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"CENT\\\", function() { return CENT; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"COS\\\", function() { return COS; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"CONG\\\", function() { return CONG; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"CTIMES\\\", function() { return CTIMES; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"DEGREES\\\", function() { return DEGREES; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"DIVIDE\\\", function() { return DIVIDE; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"DOLLAR\\\", function() { return DOLLAR; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"DOTM\\\", function() { return DOTM; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"EQUAL\\\", function() { return EQUAL; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"FRAC\\\", function() { return FRAC; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"GT\\\", function() { return GT; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"GTE\\\", function() { return GTE; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"IMAGINARY\\\", function() { return IMAGINARY; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"INFINITY\\\", function() { return INFINITY; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"INT\\\", function() { return INT; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"INTERSECT\\\", function() { return INTERSECT; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"INTXY\\\", function() { return INTXY; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"LOG_E\\\", function() { return LOG_E; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"LT\\\", function() { return LT; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"LTE\\\", function() { return LTE; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"MINUS\\\", function() { return MINUS; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"NEQ\\\", function() { return NEQ; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"OVERLINE\\\", function() { return OVERLINE; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"PARENS\\\", function() { return PARENS; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"PERP\\\", function() { return PERP; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"PHI\\\", function() { return PHI; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"PI\\\", function() { return PI; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"PLUS\\\", function() { return PLUS; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"PM\\\", function() { return PM; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"POWER\\\", function() { return POWER; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"SIMEQ\\\", function() { return SIMEQ; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"SIM\\\", function() { return SIM; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"SIN\\\", function() { return SIN; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"SMALLE\\\", function() { return SMALLE; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"SQR\\\", function() { return SQR; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"SQRT2\\\", function() { return SQRT2; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"SQRT\\\", function() { return SQRT; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"SUBSCRIPT\\\", function() { return SUBSCRIPT; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"SUBSET\\\", function() { return SUBSET; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"SUBSETEQ\\\", function() { return SUBSETEQ; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"SUM\\\", function() { return SUM; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"SUPERSET\\\", function() { return SUPERSET; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"SUPERSETEQ\\\", function() { return SUPERSETEQ; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"TAN\\\", function() { return TAN; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"THETA\\\", function() { return THETA; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"TIMES\\\", function() { return TIMES; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"TRIANGLE\\\", function() { return TRIANGLE; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"UNDERLINE\\\", function() { return UNDERLINE; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"UNION\\\", function() { return UNION; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"VDASH\\\", function() { return VDASH; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"VERT\\\", function() { return VERT; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"OPERATORS\\\", function() { return OPERATORS; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"STRUCTURE\\\", function() { return STRUCTURE; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"SYMBOLS\\\", function() { return SYMBOLS; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"TRIG\\\", function() { return TRIG; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"bpfrpt_proptype_MathQuillEditorSymbol\\\", function() { return bpfrpt_proptype_MathQuillEditorSymbol; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"bpfrpt_proptype_SymbolDefination\\\", function() { return bpfrpt_proptype_SymbolDefination; });\\n/* harmony import */ var _i18n__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../i18n */ \\\"./src/ui/i18n.js\\\");\\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ \\\"./node_modules/prop-types/index.js\\\");\\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);\\n\\nvar bpfrpt_proptype_MathQuillEditorSymbol = {\\n  \\\"label\\\": prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired,\\n  \\\"latex\\\": prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired,\\n  \\\"description\\\": prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired,\\n  \\\"cmd\\\": prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired\\n};\\nvar bpfrpt_proptype_SymbolDefination = {\\n  // The label shown at the command button.\\n  \\\"label\\\": prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired,\\n  // The latex to use\\n  \\\"latex\\\": prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired,\\n  // The mathquill command to perform.\\n  // http://docs.mathquill.com/en/latest/Api_Methods/#writelatex_string\\n  // \\\"write\\\": Write the given LaTeX at the current cursor position. If the\\n  //   cursor does not have focus, writes to last position the cursor occupied\\n  //   in the editable field.\\n  // \\\"cmd\\\": Enter a LaTeX command at the current cursor position or with the\\n  //   current selection. If the cursor does not have focus, it writes it to\\n  //   last position the cursor occupied in the editable field.\\n  \\\"cmd\\\": prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOf([\\\"cmd\\\", \\\"write\\\"]).isRequired,\\n  // the description of the command.\\n  \\\"description\\\": prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired\\n};\\n// It's hard to find a full list of latex symbols that we could use.\\n// Here's are some references that might be helpful.\\n// https://github.com/mathquill/mathquill/blob/23a0e88c80c79514ffc30ead490bd880306bce2a/src/commands/math/basicSymbols.js\\n// http://math.chapman.edu/~jipsen/mathquill/test/MathQuillsymbolsMathJax.html\\n// https://inspera.atlassian.net/wiki/spaces/KB/pages/62062830/MathQuill+symbols\\n// https://www.rapidtables.com/math/symbols/Basic_Math_Symbols.html\\n// https://www.math.uci.edu/~xiangwen/pdf/LaTeX-Math-Symbols.pdf\\nconst ABSOLUTE = {\\n  label: '|x|',\\n  latex: '|',\\n  description: 'Absolute Value',\\n  cmd: 'cmd'\\n};\\nconst ANGLE = {\\n  label: '\\\\\\\\angle',\\n  latex: '\\\\\\\\angle',\\n  description: 'Angle',\\n  cmd: 'write'\\n};\\nconst APPROX = {\\n  label: '\\\\\\\\approx',\\n  latex: '\\\\\\\\approx',\\n  description: 'Approximation',\\n  cmd: 'cmd'\\n};\\nconst ARCCOS = {\\n  label: '\\\\\\\\arccos',\\n  latex: '\\\\\\\\arccos',\\n  description: 'Arc Cos',\\n  cmd: 'write'\\n};\\nconst ARCSIN = {\\n  label: '\\\\\\\\arcsin',\\n  latex: '\\\\\\\\arcsin',\\n  description: 'Arc Sin',\\n  cmd: 'write'\\n};\\nconst ARCTAN = {\\n  label: '\\\\\\\\arctan',\\n  latex: '\\\\\\\\arctan',\\n  description: 'Arc Tan',\\n  cmd: 'write'\\n};\\nconst ARROWLL = {\\n  label: '\\\\\\\\Longleftarrow',\\n  latex: '\\\\\\\\Longleftarrow',\\n  description: 'Long Left Arrow',\\n  cmd: 'write'\\n};\\nconst ARROWRL = {\\n  label: '\\\\\\\\Longrightarrow',\\n  latex: '\\\\\\\\Longrightarrow',\\n  description: 'Long Right Arrow',\\n  cmd: 'write'\\n};\\nconst ARROWLLR = {\\n  label: '\\\\\\\\Longleftrightarrow',\\n  latex: '\\\\\\\\Longleftrightarrow',\\n  description: 'Long Left Right Arrow',\\n  cmd: 'write'\\n};\\nconst BRACKETS = {\\n  label: '[x]',\\n  latex: '[',\\n  description: 'Brackets',\\n  cmd: 'cmd'\\n};\\nconst CENT = {\\n  label: '¢',\\n  latex: '¢',\\n  description: 'Cent',\\n  cmd: 'write'\\n};\\nconst COS = {\\n  label: '\\\\\\\\cos',\\n  latex: '\\\\\\\\cos',\\n  description: 'Cos',\\n  cmd: 'write'\\n};\\nconst CONG = {\\n  label: '\\\\\\\\cong',\\n  latex: '\\\\\\\\cong',\\n  description: 'Congruent To',\\n  cmd: 'write'\\n};\\nconst CTIMES = {\\n  label: '\\\\\\\\otimes',\\n  latex: '\\\\\\\\otimes',\\n  description: 'Tensor Product',\\n  cmd: 'write'\\n};\\nconst DEGREES = {\\n  label: '\\\\\\\\deg',\\n  latex: '\\\\\\\\deg',\\n  description: 'Degrees',\\n  cmd: 'write'\\n};\\nconst DIVIDE = {\\n  label: '\\\\u00F7',\\n  latex: '\\\\\\\\divide',\\n  description: 'Division',\\n  cmd: 'cmd'\\n};\\nconst DOLLAR = {\\n  label: '$',\\n  latex: '$',\\n  description: 'Dollar',\\n  cmd: 'write'\\n};\\nconst DOTM = {\\n  label: '\\\\\\\\cdot',\\n  latex: '\\\\\\\\cdot',\\n  description: 'Dot for Multiplication',\\n  cmd: 'write'\\n};\\nconst EQUAL = {\\n  label: '=',\\n  latex: '=',\\n  description: 'Equal',\\n  cmd: 'cmd'\\n};\\nconst FRAC = {\\n  label: '\\\\\\\\frac {x}{y}',\\n  latex: '\\\\\\\\frac',\\n  description: 'Fraction',\\n  cmd: 'cmd'\\n};\\nconst GT = {\\n  label: '>',\\n  latex: '>',\\n  description: 'Greater Than',\\n  cmd: 'cmd'\\n};\\nconst GTE = {\\n  label: '\\\\\\\\ge',\\n  latex: '\\\\\\\\ge',\\n  description: 'Greater Than or Equal To',\\n  cmd: 'cmd'\\n};\\nconst IMAGINARY = {\\n  label: 'i',\\n  latex: 'i',\\n  description: 'Imaginary Number',\\n  cmd: 'write'\\n};\\nconst INFINITY = {\\n  label: '\\\\\\\\infty',\\n  latex: '\\\\\\\\infty',\\n  description: 'Infinity',\\n  cmd: 'write'\\n};\\nconst INT = {\\n  label: '\\\\\\\\int',\\n  latex: '\\\\\\\\int',\\n  description: 'Integral',\\n  cmd: 'cmd'\\n};\\nconst INTERSECT = {\\n  label: '\\\\\\\\cap',\\n  latex: '\\\\\\\\cap',\\n  description: 'Intersection',\\n  cmd: 'write'\\n};\\nconst INTXY = {\\n  label: '\\\\\\\\int_{x}^{y}',\\n  latex: '\\\\\\\\int_{x}^{y}',\\n  description: 'Integral',\\n  cmd: 'write'\\n};\\nconst LOG_E = {\\n  label: '\\\\\\\\log',\\n  latex: '\\\\\\\\log',\\n  description: 'Log',\\n  cmd: 'cmd'\\n};\\nconst LT = {\\n  label: '<',\\n  latex: '<',\\n  description: 'Less Than',\\n  cmd: 'cmd'\\n};\\nconst LTE = {\\n  label: '\\\\\\\\le',\\n  latex: 'le',\\n  description: 'Less Than or Equal To',\\n  cmd: 'cmd'\\n};\\nconst MINUS = {\\n  label: '-',\\n  latex: '-',\\n  description: 'Subtraction',\\n  cmd: 'cmd'\\n};\\nconst NEQ = {\\n  label: '\\\\\\\\neq',\\n  latex: '\\\\\\\\neq',\\n  description: 'Not Equal',\\n  cmd: 'write'\\n};\\nconst OVERLINE = {\\n  label: '\\\\\\\\overline\\\\u3000',\\n  latex: '\\\\\\\\overline',\\n  description: 'Overline',\\n  cmd: 'cmd'\\n};\\nconst PARENS = {\\n  label: '(x)',\\n  latex: '(',\\n  description: 'Parentheses',\\n  cmd: 'cmd'\\n};\\nconst PERP = {\\n  label: '\\\\\\\\perp',\\n  latex: '\\\\\\\\perp',\\n  description: 'Perpendicular Lines',\\n  cmd: 'write'\\n};\\nconst PHI = {\\n  label: '\\\\\\\\phi',\\n  latex: '\\\\\\\\phi',\\n  description: 'Phi',\\n  cmd: 'write'\\n};\\nconst PI = {\\n  label: '\\\\\\\\pi',\\n  latex: '\\\\\\\\pi',\\n  description: 'Pi',\\n  cmd: 'write'\\n};\\nconst PLUS = {\\n  label: '+',\\n  latex: '+',\\n  description: 'Addition',\\n  cmd: 'cmd'\\n};\\nconst PM = {\\n  label: '\\\\\\\\pm',\\n  latex: '\\\\\\\\pm',\\n  description: 'Plus-Minus',\\n  cmd: 'cmd'\\n};\\nconst POWER = {\\n  label: 'x^{y}',\\n  latex: '^',\\n  description: 'Power',\\n  cmd: 'cmd'\\n};\\nconst SIMEQ = {\\n  label: '\\\\\\\\simeq',\\n  latex: '\\\\\\\\simeq',\\n  description: 'Approximately Equal',\\n  cmd: 'write'\\n};\\nconst SIM = {\\n  label: '\\\\\\\\sim',\\n  latex: '\\\\\\\\sim',\\n  description: 'Similarity',\\n  cmd: 'write'\\n};\\nconst SIN = {\\n  label: '\\\\\\\\sin',\\n  latex: '\\\\\\\\sin',\\n  description: 'Sin',\\n  cmd: 'write'\\n};\\nconst SMALLE = {\\n  label: '\\\\u212F',\\n  latex: '\\\\u212F',\\n  description: 'Script Small E',\\n  cmd: 'write'\\n};\\nconst SQR = {\\n  label: 'x^{2}',\\n  latex: '^{2}',\\n  description: 'Square',\\n  cmd: 'write'\\n};\\nconst SQRT2 = {\\n  label: '\\\\\\\\sqrt[x]{y}',\\n  latex: '\\\\\\\\sqrt[x]{y}',\\n  description: 'Square Root Alt',\\n  cmd: 'write'\\n};\\nconst SQRT = {\\n  label: '\\\\\\\\sqrt x',\\n  latex: '\\\\\\\\sqrt',\\n  description: 'Square Root',\\n  cmd: 'cmd'\\n};\\nconst SUBSCRIPT = {\\n  label: 'x_{2}',\\n  latex: '_{2}',\\n  description: 'Subscript',\\n  cmd: 'write'\\n};\\nconst SUBSET = {\\n  label: '\\\\\\\\sub',\\n  latex: '\\\\\\\\sub',\\n  description: 'Subset',\\n  cmd: 'write'\\n};\\nconst SUBSETEQ = {\\n  label: '\\\\\\\\sube',\\n  latex: '\\\\\\\\sube',\\n  description: 'Subset or Equal',\\n  cmd: 'write'\\n};\\nconst SUM = {\\n  label: '\\\\\\\\sum',\\n  latex: '\\\\\\\\sum',\\n  description: 'Summation',\\n  cmd: 'cmd'\\n};\\nconst SUPERSET = {\\n  label: '\\\\\\\\supset',\\n  latex: '\\\\\\\\supset',\\n  description: 'Superset',\\n  cmd: 'write'\\n};\\nconst SUPERSETEQ = {\\n  label: '\\\\\\\\supe',\\n  latex: '\\\\\\\\supe',\\n  description: 'Superset or Equal',\\n  cmd: 'write'\\n};\\nconst TAN = {\\n  label: '\\\\\\\\tan',\\n  latex: '\\\\\\\\tan',\\n  description: 'Tan',\\n  cmd: 'write'\\n};\\nconst THETA = {\\n  label: '\\\\\\\\theta',\\n  latex: '\\\\\\\\theta',\\n  description: 'Theta',\\n  cmd: 'write'\\n};\\nconst TIMES = {\\n  label: '\\\\\\\\times',\\n  latex: '\\\\\\\\times',\\n  description: 'Multiplication',\\n  cmd: 'cmd'\\n};\\nconst TRIANGLE = {\\n  label: '\\\\\\\\bigtriangleup',\\n  latex: '\\\\\\\\bigtriangleup',\\n  description: 'Triangle',\\n  cmd: 'write'\\n};\\nconst UNDERLINE = {\\n  label: '\\\\\\\\underline\\\\u3000',\\n  latex: '\\\\\\\\underline',\\n  description: 'Underline',\\n  cmd: 'cmd'\\n};\\nconst UNION = {\\n  label: '\\\\\\\\cup',\\n  latex: '\\\\\\\\cup',\\n  description: 'Union',\\n  cmd: 'write'\\n};\\nconst VDASH = {\\n  label: '\\\\\\\\vdash',\\n  latex: '\\\\\\\\vdash',\\n  description: 'Vertical and Dash Line',\\n  cmd: 'write'\\n};\\nconst VERT = {\\n  label: '\\\\\\\\vert',\\n  latex: '\\\\\\\\vert',\\n  description: 'Vertical Line',\\n  cmd: 'write'\\n};\\nconst OPERATORS = {\\n  title: 'Operators',\\n  symbols: [PLUS, MINUS, TIMES, DOTM, DIVIDE, EQUAL, APPROX, SIM, SIMEQ, CONG, NEQ, PM, LT, GT, LTE, GTE, UNION, INTERSECT, SUBSET, SUBSETEQ, SUPERSET, SUPERSETEQ, VERT, CTIMES]\\n};\\nconst STRUCTURE = {\\n  title: 'Structure',\\n  symbols: [SUM, FRAC, PARENS, BRACKETS, SQR, SUBSCRIPT, ABSOLUTE, INTXY, OVERLINE, UNDERLINE, POWER, INT, SQRT, SQRT2, LOG_E]\\n};\\nconst SYMBOLS = {\\n  title: 'Symbols',\\n  symbols: [SMALLE, ANGLE, PI, IMAGINARY, DEGREES, THETA, PHI, TRIANGLE, INFINITY, DOLLAR, CENT, VDASH, PERP, ARROWLL, ARROWRL, ARROWLLR]\\n};\\nconst TRIG = {\\n  title: 'Trigonometry',\\n  symbols: [SIN, COS, TAN, ARCSIN, ARCCOS, ARCTAN]\\n};\\n\\n\\n\\n\\n//# sourceURL=webpack:///./src/ui/mathquill-editor/MathQuillEditorSymbols.js?\")}});","extractedComments":["/*!***********************************************************!*\\\n  !*** ./src/ui/mathquill-editor/MathQuillEditorSymbols.js ***!\n  \\***********************************************************/","/*! exports provided: ABSOLUTE, ANGLE, APPROX, ARCCOS, ARCSIN, ARCTAN, ARROWLL, ARROWRL, ARROWLLR, BRACKETS, CENT, COS, CONG, CTIMES, DEGREES, DIVIDE, DOLLAR, DOTM, EQUAL, FRAC, GT, GTE, IMAGINARY, INFINITY, INT, INTERSECT, INTXY, LOG_E, LT, LTE, MINUS, NEQ, OVERLINE, PARENS, PERP, PHI, PI, PLUS, PM, POWER, SIMEQ, SIM, SIN, SMALLE, SQR, SQRT2, SQRT, SUBSCRIPT, SUBSET, SUBSETEQ, SUM, SUPERSET, SUPERSETEQ, TAN, THETA, TIMES, TRIANGLE, UNDERLINE, UNION, VDASH, VERT, OPERATORS, STRUCTURE, SYMBOLS, TRIG, bpfrpt_proptype_MathQuillEditorSymbol, bpfrpt_proptype_SymbolDefination */"]}