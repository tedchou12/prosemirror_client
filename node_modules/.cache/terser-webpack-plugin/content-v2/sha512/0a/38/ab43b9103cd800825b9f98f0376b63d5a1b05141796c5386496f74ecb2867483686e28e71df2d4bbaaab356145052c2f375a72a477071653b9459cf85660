{"code":"webpackHotUpdate(\"licit\",{\"./src/client/EditorConnection.js\":function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/defineProperty.js\");\\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var prosemirror_collab__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prosemirror-collab */ \"./node_modules/prosemirror-collab/dist/index.es.js\");\\n/* harmony import */ var prosemirror_state__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! prosemirror-state */ \"./node_modules/prosemirror-state/dist/index.es.js\");\\n/* harmony import */ var prosemirror_transform__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! prosemirror-transform */ \"./node_modules/prosemirror-transform/dist/index.es.js\");\\n/* harmony import */ var prosemirror_view__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! prosemirror-view */ \"./node_modules/prosemirror-view/dist/index.es.js\");\\n/* harmony import */ var _EditorPlugins__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../EditorPlugins */ \"./src/EditorPlugins.js\");\\n/* harmony import */ var _EditorSchema__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../EditorSchema */ \"./src/EditorSchema.js\");\\n/* harmony import */ var _uuid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../uuid */ \"./src/uuid.js\");\\n/* harmony import */ var _http__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./http */ \"./src/client/http.js\");\\n/* harmony import */ var prosemirror_model__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! prosemirror-model */ \"./node_modules/prosemirror-model/dist/index.es.js\");\\n/* harmony import */ var flatted__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! flatted */ \"./node_modules/flatted/esm/index.js\");\\n\\n\\n\\n\\n\\n\\n\\n\\n // [FS] IRAD-1040 2020-09-02\\n\\n\\n\\n\\nfunction badVersion(err) {\\n  return err.status == 400 && /invalid version/i.test(String(err));\\n}\\n\\nvar connection = null;\\n\\nclass State {\\n  constructor(edit, comm) {\\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, \"edit\", void 0);\\n\\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, \"comm\", void 0);\\n\\n    this.edit = edit;\\n    this.comm = comm;\\n  }\\n\\n}\\n\\nclass EditorConnection {\\n  constructor(onReady, report, doc_id) {\\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, \"backOff\", void 0);\\n\\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, \"onReady\", void 0);\\n\\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, \"ready\", void 0);\\n\\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, \"report\", void 0);\\n\\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, \"request\", void 0);\\n\\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, \"state\", void 0);\\n\\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, \"url\", void 0);\\n\\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, \"view\", void 0);\\n\\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, \"schema\", void 0);\\n\\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, \"socket\", void 0);\\n\\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, \"dispatch\", action => {\\n      let newEditState = null;\\n\\n      if (action.type == \\'loaded\\') {\\n        const editState = prosemirror_state__WEBPACK_IMPORTED_MODULE_2__[\"EditorState\"].create({\\n          doc: action.doc,\\n          plugins: _EditorPlugins__WEBPACK_IMPORTED_MODULE_5__[\"default\"].concat([Object(prosemirror_collab__WEBPACK_IMPORTED_MODULE_1__[\"collab\"])({\\n            clientID: Object(_uuid__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(),\\n            version: action.version\\n          })])\\n        });\\n        this.state = new State(editState, \\'poll\\');\\n        this.ready = true;\\n        this.onReady(editState); // this.poll();\\n        // this.cursor_poll();\\n      } else if (action.type == \\'restart\\') {\\n        this.state = new State(null, \\'start\\');\\n        this.ws_start();\\n      } else if (action.type == \\'wait\\') {// this.state = new State(this.state.edit, \\'wait\\');\\n      } else if (action.type == \\'poll\\') {\\n        this.state = new State(this.state.edit, \\'poll\\'); // this.poll();\\n      } else if (action.type == \\'recover\\') {\\n        if (action.error.status && action.error.status < 500) {\\n          this.report.failure(action.error);\\n          this.state = new State(null, null);\\n        } else {\\n          this.state = new State(this.state.edit, \\'recover\\');\\n          this.ws_recover(action.error);\\n        }\\n      } else if (action.type == \\'transaction\\') {\\n        newEditState = this.state.edit ? this.state.edit.apply(action.transaction) : null;\\n      }\\n\\n      if (newEditState) {\\n        let sendable;\\n\\n        if (newEditState.doc.content.size > 40000) {\\n          if (this.state.comm !== \\'detached\\') {\\n            this.report.failure(\\'Document too big. Detached.\\');\\n          }\\n\\n          this.state = new State(newEditState, \\'detached\\');\\n        } else if ( // (this.state.comm == \\'poll\\' || action.requestDone) &&\\n        action.requestDone && (sendable = this.sendable(newEditState))) {\\n          // this.closeRequest();\\n          this.state = new State(newEditState, \\'send\\');\\n          this.ws_send(newEditState, sendable);\\n        } else if (action.requestDone) {\\n          // this.state = new State(newEditState, \\'poll\\');\\n          // this.poll();\\n          this.state = new State(newEditState, \\'poll\\');\\n        } else {\\n          this.state = new State(newEditState, this.state.comm);\\n        }\\n      } // Sync the editor with this.state.edit\\n\\n\\n      if (this.state.edit && this.view) {\\n        this.view.updateState(this.state.edit);\\n      }\\n    });\\n\\n    this.schema = null;\\n    this.report = report;\\n    this.doc_id = doc_id;\\n    this.state = new State(null, \\'start\\');\\n    this.request = null;\\n    this.backOff = 0;\\n    this.view = null;\\n    this.dispatch = this.dispatch.bind(this);\\n    this.ready = false;\\n    this.onReady = onReady;\\n    this.socket = null;\\n    connection = this;\\n  } // [FS] IRAD-1040 2020-09-08\\n\\n\\n  getEffectiveSchema() {\\n    return null != this.schema ? this.schema : _EditorSchema__WEBPACK_IMPORTED_MODULE_6__[\"default\"];\\n  } // All state changes go through this\\n\\n\\n  // Send cursor updates to the server\\n  cursor_send(selection) {\\n    const json = JSON.stringify({\\n      selection: selection,\\n      clientID: Object(_uuid__WEBPACK_IMPORTED_MODULE_7__[\"default\"])()\\n    });\\n    this.run(Object(_http__WEBPACK_IMPORTED_MODULE_8__[\"POST\"])(this.url + \\'/cursor\\', json, \\'application/json\\')).then(data => {\\n      this.report.success();\\n    }, err => {\\n      if (err.status == 410 || badVersion(err)) {\\n        // Too far behind. Revert to server state\\n        this.report.failure(err);\\n      } else if (err) {}\\n    });\\n  } // Send a request for events that have happened since the version\\n  // of the document that the client knows about. This request waits\\n  // for a new version of the document to be created if the client\\n  // is already up-to-date.\\n\\n\\n  cursor_poll() {\\n    const query = \\'version=\\' + Date.now() / 1000;\\n    this.run(Object(_http__WEBPACK_IMPORTED_MODULE_8__[\"GET\"])(this.url + \\'/cursor?\\' + query)).then(data => {\\n      this.report.success();\\n      data = JSON.parse(data);\\n\\n      if (data) {\\n        console.log(data);\\n      }\\n\\n      this.cursor_poll();\\n    }, err => {\\n      if (err.status == 410 || badVersion(err)) {\\n        // Too far behind. Revert to server state\\n        this.report.failure(err);\\n      } else if (err) {}\\n    });\\n  }\\n\\n  ws_start() {\\n    var ws_url = \\'ws://192.168.1.2:9300\\';\\n    var ws_url = ws_url + \\'?user_id=\\' + this.user_id + \\'&doc_id=\\' + this.doc_id;\\n    this.socket = new WebSocket(ws_url);\\n\\n    this.socket.onopen = function (e) {//does something when socket opens\\n    }; // replaces poll\\n\\n\\n    this.socket.onmessage = function (e) {\\n      connection.report.success();\\n      var data = JSON.parse(e.data);\\n      var json = data.data;\\n\\n      if (data.type == \\'init\\') {\\n        const editState = prosemirror_state__WEBPACK_IMPORTED_MODULE_2__[\"EditorState\"].create({\\n          doc: action.doc,\\n          plugins: _EditorPlugins__WEBPACK_IMPORTED_MODULE_5__[\"default\"].concat([Object(prosemirror_collab__WEBPACK_IMPORTED_MODULE_1__[\"collab\"])({\\n            clientID: Object(_uuid__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(),\\n            version: action.version\\n          })])\\n        });\\n        this.state = new State(editState, \\'poll\\');\\n        this.ready = true;\\n        this.onReady(editState); // connection.dispatch({\\n        //   type: \\'loaded\\',\\n        //   doc: connection.getEffectiveSchema().nodeFromJSON(json.doc_json),\\n        //   version: json.version,\\n        //   users: json.users,\\n        // });\\n      } else {\\n        connection.backOff = 0;\\n\\n        if (json.steps && json.steps.length) {\\n          const tr = Object(prosemirror_collab__WEBPACK_IMPORTED_MODULE_1__[\"receiveTransaction\"])(connection.state.edit, json.steps.map(j => prosemirror_transform__WEBPACK_IMPORTED_MODULE_3__[\"Step\"].fromJSON(connection.getEffectiveSchema(), j)), json.clientIDs);\\n          connection.dispatch({\\n            type: \\'transaction\\',\\n            transaction: tr,\\n            requestDone: true\\n          });\\n        }\\n      }\\n    }; //try reconnects\\n\\n\\n    this.socket.onclose = function (e) {\\n      // Too far behind. Revert to server state\\n      if (true) {\\n        connection.report.failure(err);\\n        connection.dispatch({\\n          type: \\'restart\\'\\n        });\\n      } else {}\\n    };\\n  }\\n\\n  ws_send(editState, sendable) {\\n    const {\\n      steps\\n    } = sendable;\\n    const json = JSON.stringify({\\n      version: Object(prosemirror_collab__WEBPACK_IMPORTED_MODULE_1__[\"getVersion\"])(editState),\\n      steps: steps ? steps.steps.map(s => s.toJSON()) : [],\\n      clientID: steps ? steps.clientID : 0\\n    });\\n    this.socket.send(json);\\n    this.report.success();\\n    this.backOff = 0;\\n    const tr = steps ? Object(prosemirror_collab__WEBPACK_IMPORTED_MODULE_1__[\"receiveTransaction\"])(this.state.edit, steps.steps, repeat(steps.clientID, steps.steps.length)) : this.state.edit.tr;\\n    this.dispatch({\\n      type: \\'transaction\\',\\n      transaction: tr,\\n      requestDone: true\\n    });\\n  }\\n\\n  ws_recover() {\\n    const newBackOff = this.backOff ? Math.min(this.backOff * 2, 6e4) : 200;\\n\\n    if (newBackOff > 1000 && this.backOff < 1000) {\\n      this.report.delay(err);\\n    }\\n\\n    this.backOff = newBackOff;\\n    setTimeout(() => {\\n      if (this.state.comm == \\'recover\\') {\\n        this.dispatch({\\n          type: \\'restart\\'\\n        });\\n      }\\n    }, this.backOff);\\n  } // Load the document from the server and start up\\n\\n\\n  start() {\\n    this.run(Object(_http__WEBPACK_IMPORTED_MODULE_8__[\"GET\"])(this.url)).then(data => {\\n      data = JSON.parse(data);\\n      this.report.success();\\n      this.backOff = 0;\\n      this.dispatch({\\n        type: \\'loaded\\',\\n        doc: this.getEffectiveSchema().nodeFromJSON(data.doc_json),\\n        version: data.version,\\n        users: data.users\\n      });\\n    }, err => {\\n      this.report.failure(err);\\n    });\\n  } // Send a request for events that have happened since the version\\n  // of the document that the client knows about. This request waits\\n  // for a new version of the document to be created if the client\\n  // is already up-to-date.\\n\\n\\n  poll() {\\n    const query = \\'version=\\' + Object(prosemirror_collab__WEBPACK_IMPORTED_MODULE_1__[\"getVersion\"])(this.state.edit);\\n    this.run(Object(_http__WEBPACK_IMPORTED_MODULE_8__[\"GET\"])(this.url + \\'/events?\\' + query)).then(data => {\\n      this.report.success();\\n      data = JSON.parse(data);\\n      this.backOff = 0;\\n\\n      if (data.steps && data.steps.length) {\\n        const tr = Object(prosemirror_collab__WEBPACK_IMPORTED_MODULE_1__[\"receiveTransaction\"])(this.state.edit, data.steps.map(j => prosemirror_transform__WEBPACK_IMPORTED_MODULE_3__[\"Step\"].fromJSON(this.getEffectiveSchema(), j)), data.clientIDs);\\n        this.dispatch({\\n          type: \\'transaction\\',\\n          transaction: tr,\\n          requestDone: true\\n        });\\n      } else {\\n        this.poll();\\n      }\\n    }, err => {\\n      if (err.status == 410 || badVersion(err)) {\\n        // Too far behind. Revert to server state\\n        this.report.failure(err);\\n        this.dispatch({\\n          type: \\'restart\\'\\n        });\\n      } else if (err) {\\n        this.dispatch({\\n          type: \\'recover\\',\\n          error: err\\n        });\\n      }\\n    });\\n  }\\n\\n  sendable(editState) {\\n    const steps = Object(prosemirror_collab__WEBPACK_IMPORTED_MODULE_1__[\"sendableSteps\"])(editState);\\n\\n    if (steps) {\\n      return {\\n        steps\\n      };\\n    }\\n\\n    return null;\\n  } // Send the given steps to the server\\n\\n\\n  send(editState, sendable) {\\n    const {\\n      steps\\n    } = sendable;\\n    const json = JSON.stringify({\\n      version: Object(prosemirror_collab__WEBPACK_IMPORTED_MODULE_1__[\"getVersion\"])(editState),\\n      steps: steps ? steps.steps.map(s => s.toJSON()) : [],\\n      clientID: steps ? steps.clientID : 0\\n    });\\n    this.run(Object(_http__WEBPACK_IMPORTED_MODULE_8__[\"POST\"])(this.url + \\'/events\\', json, \\'application/json\\')).then(data => {\\n      this.report.success();\\n      this.backOff = 0;\\n      const tr = steps ? Object(prosemirror_collab__WEBPACK_IMPORTED_MODULE_1__[\"receiveTransaction\"])(this.state.edit, steps.steps, repeat(steps.clientID, steps.steps.length)) : this.state.edit.tr;\\n      this.dispatch({\\n        type: \\'transaction\\',\\n        transaction: tr,\\n        requestDone: true\\n      });\\n    }, err => {// if (err.status == 409) {\\n      //   // The client\\'s document conflicts with the server\\'s version.\\n      //   // Poll for changes and then try again.\\n      //   this.backOff = 0;\\n      //   this.dispatch({ type: \\'poll\\' });\\n      // } else if (badVersion(err)) {\\n      //   this.report.failure(err);\\n      //   this.dispatch({ type: \\'restart\\' });\\n      // } else {\\n      //   this.dispatch({ type: \\'recover\\', error: err });\\n      // }\\n    });\\n  } // [FS] IRAD-1040 2020-09-02\\n  // Send the modified schema to server\\n\\n\\n  updateSchema(schema) {\\n    // to avoid cyclic reference error, use flatted string.\\n    const schemaFlatted = Object(flatted__WEBPACK_IMPORTED_MODULE_10__[\"stringify\"])(schema);\\n    this.run(Object(_http__WEBPACK_IMPORTED_MODULE_8__[\"POST\"])(this.url + \\'/schema/\\', schemaFlatted, \\'text/plain\\')).then(data => {\\n      console.log(\"collab server\\'s schema updated\"); // [FS] IRAD-1040 2020-09-08\\n\\n      this.schema = schema;\\n      this.start();\\n    }, err => {\\n      this.report.failure(err);\\n    });\\n  } // Try to recover from an error\\n\\n\\n  recover(err) {\\n    const newBackOff = this.backOff ? Math.min(this.backOff * 2, 6e4) : 200;\\n\\n    if (newBackOff > 1000 && this.backOff < 1000) {\\n      this.report.delay(err);\\n    }\\n\\n    this.backOff = newBackOff;\\n    setTimeout(() => {\\n      if (this.state.comm == \\'recover\\') {\\n        this.dispatch({\\n          type: \\'poll\\'\\n        });\\n      }\\n    }, this.backOff);\\n  }\\n\\n  closeRequest() {\\n    if (this.request) {\\n      this.request.abort();\\n      this.request = null;\\n    }\\n  }\\n\\n  run(request) {\\n    return this.request = request;\\n  }\\n\\n  close() {\\n    this.closeRequest();\\n    this.setView(null);\\n  }\\n\\n  setView(view) {\\n    if (this.view) {\\n      this.view.destroy();\\n    }\\n\\n    this.view = window.view = view;\\n  }\\n\\n}\\n\\nfunction repeat(val, n) {\\n  const result = [];\\n\\n  for (let i = 0; i < n; i++) {\\n    result.push(val);\\n  }\\n\\n  return result;\\n}\\n\\n/* harmony default export */ __webpack_exports__[\"default\"] = (EditorConnection);\\n\\n//# sourceURL=webpack:///./src/client/EditorConnection.js?')}});","extractedComments":["/*!****************************************!*\\\n  !*** ./src/client/EditorConnection.js ***!\n  \\****************************************/","/*! exports provided: default */"]}